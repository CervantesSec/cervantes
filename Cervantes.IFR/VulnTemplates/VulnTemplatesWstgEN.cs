/*using Cervantes.CORE.Entities;

namespace Cervantes.IFR;

public class VulnTemplatesWstgEN
{
    public static Vuln InsufficientAuthentication => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Authentication",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not properly authenticate users, allowing unauthorized access to sensitive functionality or data.",
        ProofOfConcept = "Demonstrate access to restricted areas or functions without proper authentication.",
        Impact = "Unauthorized access to sensitive data or functionality, potentially leading to data breaches or system compromise.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement strong authentication mechanisms, such as multi-factor authentication, for all sensitive areas of the application.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1078",
        MitreTechniques = "T1078 - Valid Accounts",
    };

    public static Vuln WeakPasswordRequirements => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Weak Password Requirements",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application allows weak passwords that do not meet minimum complexity and length requirements.",
        ProofOfConcept = "Create accounts with weak passwords that don't meet industry standards.",
        Impact = "Increased risk of successful brute-force attacks and unauthorized account access.",
        CVSS3 = 5.3,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
        Remediation = "Implement strong password policies requiring minimum length, complexity, and preventing common weak passwords.",
        RemediationComplexity = RemediationComplexity.Low,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1110",
        MitreTechniques = "T1110 - Credential Access",
    };

    public static Vuln InsecureSessionManagement => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insecure Session Management",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not properly manage user sessions, leading to vulnerabilities such as session fixation or insufficient session expiration.",
        ProofOfConcept = "Demonstrate hijacking a user's session or using an old session token to gain unauthorized access.",
        Impact = "Unauthorized access to user accounts and sensitive data.",
        CVSS3 = 7.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement secure session management practices, including proper session creation, expiration, and invalidation.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1539",
        MitreTechniques = "T1539 - Steal Web Session Cookie",
    };

    public static Vuln Idor => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insecure Direct Object Reference (IDOR)",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application exposes a direct object reference to internal implementation objects, such as files, directories, database records, or keys, without any access control or validation.",
        ProofOfConcept = "Demonstrate accessing or modifying resources belonging to other users by manipulating object references in requests.",
        Impact = "Unauthorized access to sensitive data, potential data theft, or manipulation of other users' information.",
        CVSS3 = 7.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement proper access controls and use indirect object references that are mapped to user-specific data on the server side.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1213",
        MitreTechniques = "T1213 - Data from Information Repositories",
    };

    public static Vuln CrossSiteScripting => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Cross-Site Scripting (XSS)",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not properly validate or encode user input before rendering it in a web page, allowing attackers to inject and execute malicious scripts in the context of other users' browsers.",
        ProofOfConcept = "Demonstrate injection of a script that executes in the victim's browser, such as displaying an alert box or stealing session cookies.",
        Impact = "Potential theft of user sessions, defacement of websites, redirection of users to malicious sites, or execution of arbitrary code in the user's browser.",
        CVSS3 = 6.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
        Remediation = "Implement proper input validation, output encoding, and use Content Security Policy (CSP) headers to mitigate XSS risks.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1189",
        MitreTechniques = "T1189 - Drive-by Compromise",
    };

    public static Vuln InsecureCryptographicStorage => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insecure Cryptographic Storage",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application stores sensitive data using weak or outdated cryptographic algorithms, or improperly implements cryptographic functions.",
        ProofOfConcept = "Demonstrate the ability to decrypt sensitive data using known weaknesses in the cryptographic implementation.",
        Impact = "Unauthorized access to sensitive data, potentially leading to identity theft, financial fraud, or other malicious activities.",
        CVSS3 = 7.4,
        CVSSVector = "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Use strong, industry-standard cryptographic algorithms and implement them correctly. Ensure proper key management practices.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1552",
        MitreTechniques = "T1552 - Unsecured Credentials",
    };

    public static Vuln InsecureDeserialization => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insecure Deserialization",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application deserializes untrusted data without sufficient verification, potentially allowing attackers to execute arbitrary code or manipulate application logic.",
        ProofOfConcept = "Create a malicious serialized object that, when deserialized, executes unauthorized commands or alters application behavior.",
        Impact = "Remote code execution, data manipulation, or denial of service.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Implement strict type checks, use safe deserialization practices, and avoid deserializing untrusted data when possible.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1203",
        MitreTechniques = "T1203 - Exploitation for Client Execution",
    };

    public static Vuln SqlInjection => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "SQL Injection",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Critical,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application constructs SQL queries using user-supplied input without proper sanitization or parameterization, allowing attackers to modify or execute arbitrary SQL commands.",
        ProofOfConcept = "Demonstrate the ability to retrieve unauthorized data or execute commands on the database by injecting malicious SQL.",
        Impact = "Unauthorized access to sensitive data, data manipulation, and potential complete compromise of the database and connected systems.",
        CVSS3 = 9.8,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Use parameterized queries or prepared statements, implement proper input validation, and apply the principle of least privilege for database accounts.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1190",
        MitreTechniques = "T1190 - Exploit Public-Facing Application",
    };
    
    public static Vuln BrokenAccessControl => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Broken Access Control",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application fails to properly enforce access controls, allowing users to perform actions or access resources they shouldn't have permission for.",
        ProofOfConcept = "Demonstrate accessing unauthorized functionality or data by manipulating request parameters or using a lower-privileged account.",
        Impact = "Unauthorized access to sensitive data or functionality, potential data theft, or manipulation of other users' information.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement and enforce proper access controls at both the application and API levels. Use role-based access control (RBAC) and the principle of least privilege.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1548",
        MitreTechniques = "T1548 - Abuse Elevation Control Mechanism",
    };

    public static Vuln SecurityMisconfiguration => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Security Misconfiguration",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application, framework, web server, or platform is configured insecurely, potentially exposing sensitive information or allowing unauthorized access.",
        ProofOfConcept = "Identify and exploit default configurations, unnecessary open services, or exposed system information.",
        Impact = "Unauthorized access to application features or data, system compromise, or information disclosure.",
        CVSS3 = 7.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N",
        Remediation = "Implement secure configuration practices, disable unnecessary features, use security headers, and regularly update and patch all components.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1082",
        MitreTechniques = "T1082 - System Information Discovery",
    };

    public static Vuln SensitiveDataExposure => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Sensitive Data Exposure",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not adequately protect sensitive information, such as financial data, healthcare information, or personally identifiable information (PII).",
        ProofOfConcept = "Intercept unencrypted data transmissions or access improperly secured sensitive data storage.",
        Impact = "Exposure of sensitive user data, potential for identity theft, financial fraud, or violation of data protection regulations.",
        CVSS3 = 7.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
        Remediation = "Encrypt sensitive data in transit and at rest, implement proper key management, and minimize exposure of sensitive data in logs and error messages.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1005",
        MitreTechniques = "T1005 - Data from Local System",
        VulnCwes = new List<string> { "CWE-311", "CWE-312", "CWE-319" },
    };

    public static Vuln InsufficientLoggingAndMonitoring => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Logging and Monitoring",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not generate adequate logs for security events, or fails to monitor and respond to security incidents in a timely manner.",
        ProofOfConcept = "Perform suspicious activities without detection, or demonstrate the lack of proper audit trails for critical operations.",
        Impact = "Delayed or missed detection of malicious activities, hindered incident response and forensics capabilities.",
        CVSS3 = 6.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
        Remediation = "Implement comprehensive logging for security-relevant events, ensure proper log storage and protection, and establish effective monitoring and alerting mechanisms.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1562",
        MitreTechniques = "T1562 - Impair Defenses",
    };

    public static Vuln UsingComponentsWithKnownVulnerabilities => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Using Components with Known Vulnerabilities",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application uses third-party components, libraries, or frameworks with known security vulnerabilities.",
        ProofOfConcept = "Identify outdated components and demonstrate exploitation of known vulnerabilities in these components.",
        Impact = "Potential for various types of attacks depending on the vulnerability, including data theft, remote code execution, or application compromise.",
        CVSS3 = 7.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Regularly update and patch all components, implement a software composition analysis tool, and maintain an inventory of all used components and their versions.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1190",
        MitreTechniques = "T1190 - Exploit Public-Facing Application",
    };

    public static Vuln ServerSideRequestForgery => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Server-Side Request Forgery (SSRF)",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application processes user-supplied URLs or file paths to retrieve resources, allowing an attacker to manipulate requests to access internal resources or perform unauthorized actions.",
        ProofOfConcept = "Demonstrate the ability to make the server request internal resources or external sites controlled by the attacker.",
        Impact = "Potential access to internal systems, data exfiltration, or remote code execution in some cases.",
        CVSS3 = 8.6,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:H",
        Remediation = "Implement strict input validation, use allow lists for permitted URLs or domains, disable unnecessary URL schemes, and use a separate server for making external requests.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "",
        OWASPImpact = "",
        OWASPLikehood = "",
        OWASPVector = "",
        MitreValues = "T1190",
        MitreTechniques = "T1190 - Exploit Public-Facing Application",
    };

     public static Vuln XmlExternalEntityProcessing => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "XML External Entity (XXE) Processing",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application processes XML input that includes external entity references without proper validation, allowing attackers to disclose internal files, perform server-side request forgery, or execute denial of service attacks.",
        ProofOfConcept = "Demonstrate the ability to read internal files or make the server connect to arbitrary hosts using XML input containing malicious external entities.",
        Impact = "Potential disclosure of sensitive data, server-side request forgery, or denial of service.",
        CVSS3 = 8.2,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:H",
        Remediation = "Disable XML external entity and DTD processing in all XML parsers in the application, use less complex data formats like JSON where possible, and validate and sanitize all XML input.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Execution",
        MitreTechniques = "T1190",
        VulnCwes = new List<string> { "CWE-611" },
    };

    public static Vuln LackOfRateLimiting => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Lack of Rate Limiting",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not implement proper rate limiting mechanisms, allowing attackers to perform excessive numbers of requests or operations.",
        ProofOfConcept = "Demonstrate the ability to make a large number of requests in a short time period without any restrictions.",
        Impact = "Potential for denial of service, brute force attacks, or excessive resource consumption.",
        CVSS3 = 5.3,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        Remediation = "Implement rate limiting on all API endpoints and critical functions. Use techniques such as token bucket algorithms or fixed window counters to restrict the number of requests a user can make in a given time period.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Impact",
        MitreTechniques = "T1499",
        VulnCwes = new List<string> { "CWE-770" },
    };

    public static Vuln InadequateOAuth2Implementation => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Inadequate OAuth 2.0 Implementation",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application's OAuth 2.0 implementation contains security flaws, such as improper validation of redirect URIs, insecure storage of tokens, or mishandling of state parameters.",
        ProofOfConcept = "Demonstrate the ability to perform token theft, account takeover, or unauthorized access through flaws in the OAuth implementation.",
        Impact = "Potential for unauthorized access to user accounts, data theft, or impersonation of users.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N",
        Remediation = "Implement OAuth 2.0 securely by following best practices: validate all redirect URIs, use state parameters to prevent CSRF, securely store and transmit tokens, and implement proper token validation and expiration.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Credential Access, Lateral Movement",
        MitreTechniques = "T1550",
        VulnCwes = new List<string> { "CWE-346", "CWE-601" },
    };
    
    public static Vuln InsufficientAntiAutomation => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Anti-Automation",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application lacks sufficient measures to prevent automated attacks, such as credential stuffing, brute force attempts, or content scraping.",
        ProofOfConcept = "Demonstrate the ability to perform high-volume automated requests without triggering any defensive mechanisms.",
        Impact = "Potential for account takeover, data harvesting, or service degradation through automated attacks.",
        CVSS3 = 6.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        Remediation = "Implement anti-automation measures such as CAPTCHA, rate limiting, IP-based restrictions, and behavioral analysis to detect and prevent automated attacks.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Credential Access",
        MitreTechniques = "T1110",
        VulnCwes = new List<string> { "CWE-799", "CWE-837" },
    };
    
    public static Vuln WeakCryptographicAlgorithms => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Weak Cryptographic Algorithms",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application uses weak or outdated cryptographic algorithms that are susceptible to attacks.",
        ProofOfConcept = "Identify the use of weak algorithms (e.g., MD5, SHA1, DES) in the application's cryptographic operations.",
        Impact = "Potential for decryption of sensitive data, compromised integrity of signed data, or breaking of secure communication channels.",
        CVSS3 = 7.4,
        CVSSVector = "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Replace weak algorithms with strong, modern cryptographic algorithms (e.g., AES, SHA-256, RSA with appropriate key sizes) and follow best practices for their implementation.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Credential Access, Impact",
        MitreTechniques = "T1557",
        VulnCwes = new List<string> { "CWE-327", "CWE-326" },
    };

    public static Vuln ImproperCertificateValidation => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Improper Certificate Validation",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not properly validate SSL/TLS certificates, potentially allowing man-in-the-middle attacks or connections to malicious servers.",
        ProofOfConcept = "Demonstrate the ability to intercept SSL/TLS traffic using a self-signed or invalid certificate without the application detecting it.",
        Impact = "Potential for eavesdropping on sensitive communications, data theft, or injection of malicious content.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Implement proper certificate validation, including checking for expiration, revocation, and matching hostnames. Use certificate pinning for high-security applications.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Possible",
        OWASPVector = "2.0",
        MitreValues = "Collection, Man-in-the-Middle",
        MitreTechniques = "T1557",
        VulnCwes = new List<string> { "CWE-295" },
    };

    public static Vuln CrossSiteRequestForgery => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Cross-Site Request Forgery (CSRF)",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not implement adequate CSRF protections, allowing attackers to trick users into performing unintended actions on the authenticated application.",
        ProofOfConcept = "Create a malicious webpage that, when visited by an authenticated user, performs an unauthorized action on the vulnerable application.",
        Impact = "Potential for unauthorized actions performed on behalf of authenticated users, such as changes to account settings or unauthorized transfers.",
        CVSS3 = 6.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
        Remediation = "Implement anti-CSRF tokens for all state-changing operations, use the SameSite cookie attribute, and consider implementing additional defenses like custom request headers.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Privilege Escalation",
        MitreTechniques = "T1204",
        VulnCwes = new List<string> { "CWE-352" },
    };

    public static Vuln InsufficientPasswordRecoveryMechanism => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Password Recovery Mechanism",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application's password recovery mechanism is weak or can be easily bypassed, potentially allowing attackers to take over user accounts.",
        ProofOfConcept = "Demonstrate the ability to reset a user's password without proper authentication or by bypassing security measures.",
        Impact = "Potential for unauthorized access to user accounts, leading to data theft or account abuse.",
        CVSS3 = 7.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement a secure password recovery process using time-limited, single-use recovery tokens sent via out-of-band channels. Avoid using security questions as the sole recovery method.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Credential Access",
        MitreTechniques = "T1552",
        VulnCwes = new List<string> { "CWE-640" },
    };

    public static Vuln LackOfInputSanitization => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Lack of Input Sanitization",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not properly sanitize or validate user input, potentially allowing various injection attacks or other malicious inputs.",
        ProofOfConcept = "Demonstrate the ability to inject malicious payloads (e.g., SQL injection, XSS) through user input fields.",
        Impact = "Potential for data manipulation, unauthorized data access, or execution of malicious scripts, depending on the context of the unsanitized input.",
        CVSS3 = 8.6,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
        Remediation = "Implement proper input validation and sanitization for all user inputs. Use parameterized queries for database operations, encode output for XSS prevention, and validate inputs against a whitelist of allowed characters and formats.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Execution",
        MitreTechniques = "T1190",
        VulnCwes = new List<string> { "CWE-20", "CWE-79", "CWE-89" },
    };
    
    public static Vuln InsufficientSessionTimeout => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Session Timeout",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not implement proper session timeout mechanisms, allowing sessions to remain active for extended periods of time.",
        ProofOfConcept = "Demonstrate that a user's session remains active even after long periods of inactivity or closing the browser.",
        Impact = "Increased risk of session hijacking, especially on shared computers or in case of session token theft.",
        CVSS3 = 5.3,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
        Remediation = "Implement proper session timeout mechanisms. Set reasonable expiration times for sessions and ensure that sessions are invalidated after user logout or extended periods of inactivity.",
        RemediationComplexity = RemediationComplexity.Low,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Defense Evasion",
        MitreTechniques = "T1497",
        VulnCwes = new List<string> { "CWE-613" },
    };

    public static Vuln ImproperErrorHandling => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Improper Error Handling",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application reveals sensitive information through detailed error messages or stack traces, potentially aiding attackers in understanding the application's structure and vulnerabilities.",
        ProofOfConcept = "Trigger application errors that reveal sensitive information such as database structure, file paths, or internal IP addresses.",
        Impact = "Information disclosure that could aid attackers in further exploiting the application or underlying systems.",
        CVSS3 = 5.3,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
        Remediation = "Implement proper error handling that displays generic error messages to users while logging detailed error information securely for developers. Ensure that debug modes are disabled in production environments.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Discovery",
        MitreTechniques = "T1082",
        VulnCwes = new List<string> { "CWE-209", "CWE-200" },
    };

    public static Vuln MissingSecurityHeaders => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Missing Security Headers",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not implement important security headers that can help protect against various attacks such as XSS, clickjacking, and man-in-the-middle attacks.",
        ProofOfConcept = "Analyze the HTTP response headers and demonstrate the absence of important security headers such as Content-Security-Policy, X-Frame-Options, or Strict-Transport-Security.",
        Impact = "Increased vulnerability to various attacks that could have been mitigated by proper security headers.",
        CVSS3 = 6.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        Remediation = "Implement appropriate security headers including Content-Security-Policy, X-Frame-Options, Strict-Transport-Security, X-Content-Type-Options, and Referrer-Policy. Configure these headers correctly based on the application's requirements.",
        RemediationComplexity = RemediationComplexity.Low,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Defense Evasion",
        MitreTechniques = "T1556",
        VulnCwes = new List<string> { "CWE-693", "CWE-1021" },
    };

    public static Vuln InsecureUseOfCryptography => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insecure Use of Cryptography",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application uses cryptographic functions insecurely, such as using weak key sizes, improper key management, or incorrect implementation of cryptographic protocols.",
        ProofOfConcept = "Identify instances of insecure cryptographic practices, such as hardcoded encryption keys, use of ECB mode for symmetric encryption, or improper certificate validation.",
        Impact = "Potential compromise of encrypted data, broken confidentiality or integrity of communications, or bypass of security mechanisms relying on cryptography.",
        CVSS3 = 7.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Use well-vetted cryptographic libraries, ensure proper key management (generation, storage, and rotation), use appropriate key sizes and modes of operation, and follow best practices for the chosen cryptographic protocols.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Credential Access, Impact",
        MitreTechniques = "T1552",
        VulnCwes = new List<string> { "CWE-327", "CWE-320" },
    };

    public static Vuln BrokenFunctionLevelAuthorization => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Broken Function Level Authorization",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application fails to properly restrict access to certain functions based on user roles, allowing users to perform actions they should not be authorized to do.",
        ProofOfConcept = "Demonstrate accessing administrative functions or performing privileged actions using a low-privileged user account.",
        Impact = "Unauthorized access to sensitive functionality, potential for data theft, manipulation, or system compromise.",
        CVSS3 = 8.8,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Implement proper function level access controls. Enforce authorization checks consistently across all application functions. Use role-based access control (RBAC) and apply the principle of least privilege.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Privilege Escalation",
        MitreTechniques = "T1548",
        VulnCwes = new List<string> { "CWE-285" },
    };
    
    public static Vuln InsecureCommunicationChannels => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insecure Communication Channels",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application uses insecure protocols or weak encryption for data transmission, potentially exposing sensitive information to interception or manipulation.",
        ProofOfConcept = "Demonstrate the ability to intercept and read sensitive data in transit, or show the use of outdated protocols like SSLv3 or TLS 1.0.",
        Impact = "Potential exposure of sensitive data, including credentials, personal information, or business-critical data to unauthorized parties.",
        CVSS3 = 7.4,
        CVSSVector = "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement secure communication protocols (TLS 1.2 or higher) for all data transmissions. Ensure proper configuration of encryption algorithms and key sizes. Use certificate pinning for mobile applications.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Collection, Exfiltration",
        MitreTechniques = "T1040",
        VulnCwes = new List<string> { "CWE-319", "CWE-326" },
    };



    public static Vuln LackOfSecureDefaults => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Lack of Secure Defaults",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application or its components are deployed with insecure default configurations, potentially exposing the system to unnecessary risks.",
        ProofOfConcept = "Identify default accounts with weak passwords, unnecessary services enabled by default, or overly permissive default permissions.",
        Impact = "Increased attack surface and potential for exploitation of unnecessary features or services.",
        CVSS3 = 6.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
        Remediation = "Implement a 'secure by default' approach. Disable unnecessary features and services, remove default accounts or change their credentials, and apply least privilege principles to default configurations.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access",
        MitreTechniques = "T1133",
        VulnCwes = new List<string> { "CWE-276", "CWE-1188" },
    };
    

    public static Vuln InsufficientProtectionFromAutomatedThreats => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Protection from Automated Threats",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application lacks adequate defenses against automated attacks such as credential stuffing, brute force attempts, or content scraping.",
        ProofOfConcept = "Demonstrate the ability to perform a high volume of requests (e.g., login attempts or data retrieval) without triggering any defensive mechanisms.",
        Impact = "Increased risk of account takeover, data harvesting, or service degradation due to automated attacks.",
        CVSS3 = 6.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        Remediation = "Implement rate limiting, CAPTCHA challenges, account lockouts, and IP-based restrictions. Use behavioral analysis to detect and prevent automated attacks. Consider using web application firewalls (WAF) for additional protection.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Credential Access",
        MitreTechniques = "T1110",
        VulnCwes = new List<string> { "CWE-799", "CWE-307" },
    };
    
    public static Vuln UnvalidatedRedirectsAndForwards => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Unvalidated Redirects and Forwards",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application redirects or forwards users to potentially malicious websites without proper validation of the destination URL.",
        ProofOfConcept = "Demonstrate the ability to manipulate redirect parameters to send users to arbitrary external websites.",
        Impact = "Potential for phishing attacks, malware distribution, or social engineering by redirecting users to malicious sites.",
        CVSS3 = 6.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
        Remediation = "Implement strict validation of all redirect destinations. Use a whitelist of allowed destinations or validate against a pattern of known-good URLs. Avoid using user-supplied input directly in redirect functions.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access",
        MitreTechniques = "T1566",
        VulnCwes = new List<string> { "CWE-601" },
    };

    public static Vuln InsecureAuthenticationMechanism => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insecure Authentication Mechanism",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application uses weak or easily bypassed authentication mechanisms, potentially allowing unauthorized access to user accounts.",
        ProofOfConcept = "Demonstrate bypassing authentication controls or exploiting weaknesses in the authentication process.",
        Impact = "Unauthorized access to user accounts, potential for identity theft, data breach, or system compromise.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement strong, multi-factor authentication mechanisms. Use secure session management, enforce password policies, and consider using federated identity providers for enhanced security.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Credential Access",
        MitreTechniques = "T1078",
        VulnCwes = new List<string> { "CWE-287", "CWE-384" },
    };

    public static Vuln InsufficientAntiCachingHeaders => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Anti-Caching Headers",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not set proper cache-control headers, potentially allowing sensitive information to be stored in browser caches or intermediate proxies.",
        ProofOfConcept = "Demonstrate the ability to retrieve sensitive information from browser cache or show that sensitive pages are cached by proxies.",
        Impact = "Potential exposure of sensitive data to unauthorized parties, especially on shared computers or through man-in-the-middle attacks.",
        CVSS3 = 5.3,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
        Remediation = "Implement proper cache-control headers (e.g., Cache-Control: no-store, no-cache, must-revalidate) for pages containing sensitive information. Use HTTPS to prevent caching by intermediate proxies.",
        RemediationComplexity = RemediationComplexity.Low,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Collection",
        MitreTechniques = "T1557",
        VulnCwes = new List<string> { "CWE-525" },
    };

    public static Vuln LackOfProperTLSConfiguration => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Lack of Proper TLS Configuration",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application uses weak or outdated TLS configurations, potentially exposing communications to interception or manipulation.",
        ProofOfConcept = "Demonstrate the use of weak cipher suites, outdated TLS versions, or misconfigured certificate validation.",
        Impact = "Potential for man-in-the-middle attacks, data interception, or degradation of encrypted communications.",
        CVSS3 = 7.4,
        CVSSVector = "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Configure TLS to use only strong cipher suites, disable older TLS versions (1.0, 1.1), ensure proper certificate validation, and implement HSTS. Regularly review and update TLS configurations.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Possible",
        OWASPVector = "2.0",
        MitreValues = "Command and Control",
        MitreTechniques = "T1573",
        VulnCwes = new List<string> { "CWE-326", "CWE-327" },
    };

    public static Vuln InsufficientDataProtection => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Data Protection in Transit and at Rest",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not adequately protect sensitive data during transmission or storage, potentially exposing it to unauthorized access or tampering.",
        ProofOfConcept = "Demonstrate the ability to intercept unencrypted data in transit or access sensitive data stored in an insecure manner.",
        Impact = "Potential exposure of sensitive user data, compliance violations, and increased risk of data breaches.",
        CVSS3 = 7.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement strong encryption for data in transit (e.g., TLS) and at rest (e.g., file-level or database encryption). Use secure key management practices and ensure that all sensitive data is identified and protected.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Collection, Exfiltration",
        MitreTechniques = "T1040, T1029",
        VulnCwes = new List<string> { "CWE-311", "CWE-312" },
    };
    
    public static Vuln ImproperAssetManagement => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Improper Asset Management",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The organization lacks proper inventory and management of its IT assets, potentially leading to unpatched systems, forgotten servers, or unauthorized devices on the network.",
        ProofOfConcept = "Identify unmanaged or forgotten systems, outdated software versions, or unauthorized devices connected to the network.",
        Impact = "Increased attack surface, potential for undetected compromises, and difficulty in maintaining overall security posture.",
        CVSS3 = 5.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
        Remediation = "Implement a comprehensive asset management system. Regularly inventory and update all IT assets, including hardware, software, and cloud resources. Establish processes for asset lifecycle management.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Discovery",
        MitreTechniques = "T1046",
        VulnCwes = new List<string> { "CWE-1059" },
    };

    public static Vuln LackOfSoftwareUpdates => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Lack of Software Updates/Patch Management",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application or its underlying systems are not regularly updated, potentially leaving known vulnerabilities unpatched.",
        ProofOfConcept = "Identify outdated software versions with known vulnerabilities that could be exploited.",
        Impact = "Increased risk of exploitation of known vulnerabilities, potentially leading to system compromise, data breaches, or service disruptions.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Implement a robust patch management process. Regularly update all software components, including the application, libraries, frameworks, and operating systems. Automate the patching process where possible.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Execution",
        MitreTechniques = "T1190",
        VulnCwes = new List<string> { "CWE-1104" },
    };

    public static Vuln InsufficientPrivacyControls => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Privacy Controls",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application lacks adequate controls to protect user privacy, potentially violating data protection regulations or user expectations.",
        ProofOfConcept = "Demonstrate collection, processing, or sharing of personal data without proper consent or beyond stated purposes.",
        Impact = "Potential legal and regulatory violations, loss of user trust, and possible financial penalties.",
        CVSS3 = 5.9,
        CVSSVector = "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
        Remediation = "Implement privacy by design principles. Conduct privacy impact assessments, obtain proper user consent for data collection and processing, and provide clear privacy policies. Implement data minimization and purpose limitation principles.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Possible",
        OWASPVector = "2.0",
        MitreValues = "Collection",
        MitreTechniques = "T1005",
        VulnCwes = new List<string> { "CWE-359" },
    };

    public static Vuln InsecureAPIEndpoints => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insecure API Endpoints",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application's API endpoints lack proper security controls, potentially allowing unauthorized access, data manipulation, or information disclosure.",
        ProofOfConcept = "Demonstrate unauthorized access to API endpoints, data manipulation, or extraction of sensitive information through API calls.",
        Impact = "Potential for data breaches, unauthorized actions, or system compromise through API exploitation.",
        CVSS3 = 8.6,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Implement strong authentication and authorization for all API endpoints. Use API keys, OAuth tokens, or other secure methods. Validate and sanitize all API inputs, implement rate limiting, and use HTTPS for all API communications.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Execution",
        MitreTechniques = "T1190",
        VulnCwes = new List<string> { "CWE-284", "CWE-285" },
    };

    public static Vuln LackOfSecurityHeaders => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Lack of Security Headers",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not implement important security headers that can help protect against various attacks such as XSS, clickjacking, and MIME type sniffing.",
        ProofOfConcept = "Analyze HTTP response headers and demonstrate the absence of important security headers.",
        Impact = "Increased vulnerability to client-side attacks, potential for clickjacking, or execution of malicious content.",
        CVSS3 = 6.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        Remediation = "Implement security headers such as Content-Security-Policy, X-Frame-Options, X-Content-Type-Options, Strict-Transport-Security, and Referrer-Policy. Configure these headers correctly based on the application's requirements.",
        RemediationComplexity = RemediationComplexity.Low,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Defense Evasion",
        MitreTechniques = "T1556",
        VulnCwes = new List<string> { "CWE-693", "CWE-1021" },
    };

    public static Vuln InsufficientInputValidation => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Input Validation",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not properly validate user input, potentially allowing injection attacks, buffer overflows, or other malicious inputs.",
        ProofOfConcept = "Demonstrate the ability to input malicious data that is processed by the application without proper validation or sanitization.",
        Impact = "Potential for various attacks including SQL injection, XSS, command injection, or application crashes.",
        CVSS3 = 8.6,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Implement strict input validation for all user-supplied data. Use whitelisting, input sanitization, and parameterized queries. Validate input for type, length, format, and range as appropriate.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Execution",
        MitreTechniques = "T1190",
        VulnCwes = new List<string> { "CWE-20" },
    };

    public static Vuln ImproperOutputEncoding => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Improper Output Encoding",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not properly encode output before rendering it to users, potentially allowing injection attacks such as Cross-Site Scripting (XSS).",
        ProofOfConcept = "Demonstrate the ability to inject and execute malicious scripts or HTML in the application's output.",
        Impact = "Potential for client-side attacks, data theft, session hijacking, or defacement of the application.",
        CVSS3 = 6.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
        Remediation = "Implement context-aware output encoding for all dynamic content. Use appropriate encoding functions for HTML, JavaScript, CSS, and URL contexts. Consider using template engines with automatic escaping.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Execution",
        MitreTechniques = "T1189",
        VulnCwes = new List<string> { "CWE-79", "CWE-116" },
    };

    public static Vuln InsecureFileHandling => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insecure File Handling",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not properly validate or handle file operations, potentially allowing unauthorized access, file inclusion, or execution of malicious files.",
        ProofOfConcept = "Demonstrate the ability to access files outside intended directories, upload malicious files, or execute arbitrary files on the server.",
        Impact = "Potential for unauthorized access to sensitive files, remote code execution, or compromise of the server.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Implement strict input validation for file names and paths. Use whitelisting for allowed file types and extensions. Store user-uploaded files outside the web root and use secure file handling libraries.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Execution",
        MitreTechniques = "T1505",
        VulnCwes = new List<string> { "CWE-73", "CWE-434" },
    };

    public static Vuln LackOfSecurePasswordStorage => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Lack of Secure Password Storage",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Critical,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application does not securely store user passwords, potentially exposing them to unauthorized access or making them vulnerable to cracking attempts.",
        ProofOfConcept = "Demonstrate that passwords are stored in plaintext, using weak hashing algorithms, or without proper salting.",
        Impact = "Potential for unauthorized access to user accounts, mass account compromise in case of data breach.",
        CVSS3 = 9.8,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Use strong, adaptive hashing algorithms (e.g., bcrypt, Argon2) for password storage. Implement proper salting and ensure sufficient work factors. Never store passwords in plaintext or using reversible encryption.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "Critical",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "3.0",
        MitreValues = "Credential Access",
        MitreTechniques = "T1003",
        VulnCwes = new List<string> { "CWE-256", "CWE-916" },
    };

    public static Vuln InsufficientProtectionAgainstDoS => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Protection Against Denial of Service",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application lacks adequate measures to protect against Denial of Service (DoS) attacks, potentially allowing attackers to overwhelm system resources and disrupt service availability.",
        ProofOfConcept = "Demonstrate the ability to consume excessive resources or trigger resource-intensive operations without proper limitations.",
        Impact = "Potential for service disruption, degraded performance, or complete system unavailability.",
        CVSS3 = 7.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        Remediation = "Implement rate limiting, request throttling, and resource quotas. Use efficient algorithms and caching where appropriate. Consider implementing CAPTCHAs for sensitive operations and deploy DoS mitigation solutions at the network level.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Possible",
        OWASPVector = "2.0",
        MitreValues = "Impact",
        MitreTechniques = "T1498",
        VulnCwes = new List<string> { "CWE-400" },
    };
    
     public static Vuln InadequateSessionManagement => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Inadequate Session Management",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application implements weak session management practices, potentially allowing attackers to hijack or predict user sessions.",
        ProofOfConcept = "Demonstrate the ability to hijack user sessions, predict session tokens, or maintain authenticated sessions beyond the intended duration.",
        Impact = "Potential for unauthorized access to user accounts, session hijacking, or bypass of authentication mechanisms.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement secure session management practices: use cryptographically strong session tokens, enforce secure token transmission (HTTPS), implement proper session expiration and rotation, and invalidate sessions on logout.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Credential Access",
        MitreTechniques = "T1539",
        VulnCwes = new List<string> { "CWE-384", "CWE-613" },
    };

    public static Vuln InsecureDirectObjectReferences => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insecure Direct Object References",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application exposes references to internal implementation objects, such as files, directories, database records, or keys, without proper access control checks.",
        ProofOfConcept = "Demonstrate the ability to access or modify resources belonging to other users by manipulating object references in requests.",
        Impact = "Unauthorized access to sensitive data, potential data theft, or manipulation of other users' information.",
        CVSS3 = 7.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement proper access controls for all object references. Use indirect references mapped to actual resources on the server side. Validate user authorization for each access to a direct object reference.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Lateral Movement, Collection",
        MitreTechniques = "T1213",
        VulnCwes = new List<string> { "CWE-639" },
    };
    

    public static Vuln InsufficientSubresourceIntegrity => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Subresource Integrity",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Medium,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application loads external resources (such as scripts or stylesheets) without proper integrity checks, potentially allowing attackers to inject malicious content through compromised third-party resources.",
        ProofOfConcept = "Demonstrate that the application loads external resources without Subresource Integrity (SRI) checks, making it vulnerable to supply chain attacks.",
        Impact = "Potential for execution of unauthorized scripts, leading to data theft, defacement, or other client-side attacks.",
        CVSS3 = 6.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
        Remediation = "Implement Subresource Integrity (SRI) for all externally loaded resources. Use integrity attributes with cryptographic hashes to ensure the integrity of loaded resources.",
        RemediationComplexity = RemediationComplexity.Low,
        RemediationPriority = RemediationPriority.Medium,
        JiraCreated = false,
        OWASPRisk = "Medium",
        OWASPImpact = "Moderate",
        OWASPLikehood = "Possible",
        OWASPVector = "2.0",
        MitreValues = "Initial Access",
        MitreTechniques = "T1195",
        VulnCwes = new List<string> { "CWE-353" },
    };

    public static Vuln ImproperAccessControl => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Improper Access Control",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application fails to properly restrict access to resources or functionalities based on user privileges, potentially allowing unauthorized users to perform actions or access data they shouldn't.",
        ProofOfConcept = "Demonstrate the ability to access restricted functionalities or data by manipulating request parameters or using a lower-privileged account.",
        Impact = "Unauthorized access to sensitive data or functionality, potential for privilege escalation or data manipulation.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement proper access controls at both the application and API levels. Use role-based access control (RBAC) and enforce the principle of least privilege. Validate user permissions for every sensitive action or data access.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Privilege Escalation, Lateral Movement",
        MitreTechniques = "T1548",
        VulnCwes = new List<string> { "CWE-284", "CWE-285" },
    };
    
 
    public static Vuln XmlExternalEntityInjection => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "XML External Entity (XXE) Injection",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application processes XML input that includes external entity references without proper validation, allowing attackers to disclose internal files, perform server-side request forgery, or execute denial of service attacks.",
        ProofOfConcept = "Demonstrate the ability to read internal files or make the server connect to arbitrary hosts using XML input containing malicious external entities.",
        Impact = "Potential disclosure of sensitive data, server-side request forgery, or denial of service.",
        CVSS3 = 8.2,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:H",
        Remediation = "Disable XML external entity and DTD processing in all XML parsers in the application, use less complex data formats like JSON where possible, and validate and sanitize all XML input.",
        RemediationComplexity = RemediationComplexity.Medium,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Execution",
        MitreTechniques = "T1190",
        VulnCwes = new List<string> { "CWE-611" },
    };

    public static Vuln InsufficientThreatModeling => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insufficient Threat Modeling",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application lacks comprehensive threat modeling, potentially missing critical security risks and failing to implement appropriate countermeasures.",
        ProofOfConcept = "Identify security vulnerabilities or attack vectors that were not considered during the design phase and are not adequately addressed in the application.",
        Impact = "Increased overall risk of security breaches due to unidentified threats, potentially leading to various types of attacks and compromises.",
        CVSS3 = 7.5,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
        Remediation = "Implement a comprehensive threat modeling process during the design phase. Use methodologies like STRIDE or PASTA. Regularly update threat models and ensure security controls address identified threats.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Defense Evasion",
        MitreTechniques = "T1195",
        VulnCwes = new List<string> { "CWE-1053" },
    };

    public static Vuln InadequateSecurityArchitecture => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Inadequate Security Architecture",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application's security architecture is insufficient, lacking proper security controls, secure design patterns, or a defense-in-depth approach.",
        ProofOfConcept = "Demonstrate architectural flaws that allow bypassing multiple security layers or exploiting systemic weaknesses in the application's design.",
        Impact = "Increased vulnerability to various attacks due to systemic weaknesses, potentially leading to large-scale compromises or data breaches.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Implement a robust security architecture following principles like defense-in-depth, least privilege, and secure-by-design. Conduct regular architecture reviews and ensure alignment with security best practices.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Defense Evasion, Lateral Movement",
        MitreTechniques = "T1190",
        VulnCwes = new List<string> { "CWE-1008" },
    };

    public static Vuln FlawedBusinessLogic => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Flawed Business Logic",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application contains flaws in its business logic implementation, allowing users to perform actions that violate the intended business process or security assumptions.",
        ProofOfConcept = "Demonstrate the ability to manipulate the application's business processes, such as bypassing payment, altering order quantities, or accessing unauthorized discounts.",
        Impact = "Potential for financial losses, unauthorized access to services, or manipulation of critical business processes.",
        CVSS3 = 7.7,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:N",
        Remediation = "Implement thorough business logic validation. Ensure all business processes are properly modeled and enforced in the application. Conduct peer reviews of business logic implementation and perform comprehensive testing of business scenarios.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Privilege Escalation",
        MitreTechniques = "T1195",
        VulnCwes = new List<string> { "CWE-840" },
    };

    public static Vuln MaliciousCodeInjection => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Malicious Code Injection",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.Critical,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application is vulnerable to injection of malicious code, allowing attackers to execute unauthorized commands or scripts within the application's context.",
        ProofOfConcept = "Demonstrate the ability to inject and execute malicious code, such as OS commands, SQL queries, or client-side scripts, through various input vectors.",
        Impact = "Potential for complete system compromise, data theft, or unauthorized actions performed with the application's privileges.",
        CVSS3 = 9.8,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Implement strict input validation and output encoding. Use parameterized queries for database operations. Avoid using eval() or other dangerous functions that execute dynamic code. Implement Content Security Policy (CSP) headers.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "Critical",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "3.0",
        MitreValues = "Execution, Privilege Escalation",
        MitreTechniques = "T1059",
        VulnCwes = new List<string> { "CWE-94", "CWE-79", "CWE-89" },
    };

    public static Vuln InsecureThirdPartyComponents => new Vuln
    {
        Template = true,
        Language = Language.English,
        Name = "Insecure Third-Party Components",
        CreatedDate = DateTime.UtcNow,
        ModifiedDate = DateTime.UtcNow,
        Risk = VulnRisk.High,
        Status = VulnStatus.Open,
        cve = "N/A",
        Description = "The application uses third-party components, libraries, or frameworks that are outdated, contain known vulnerabilities, or are obtained from untrusted sources.",
        ProofOfConcept = "Identify and demonstrate exploitation of known vulnerabilities in third-party components used by the application.",
        Impact = "Potential for various types of attacks depending on the vulnerabilities in the components, including data theft, remote code execution, or application compromise.",
        CVSS3 = 8.1,
        CVSSVector = "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        Remediation = "Implement a software composition analysis (SCA) tool to track and manage third-party components. Regularly update components to their latest secure versions. Establish a process for vetting and approving third-party code. Use trusted sources for obtaining components.",
        RemediationComplexity = RemediationComplexity.High,
        RemediationPriority = RemediationPriority.High,
        JiraCreated = false,
        OWASPRisk = "High",
        OWASPImpact = "Severe",
        OWASPLikehood = "Likely",
        OWASPVector = "2.0",
        MitreValues = "Initial Access, Execution",
        MitreTechniques = "T1195",
        VulnCwes = new List<string> { "CWE-1104" },
    };

}*/