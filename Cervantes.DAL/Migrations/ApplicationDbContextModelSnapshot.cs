// <auto-generated />
using System;
using Cervantes.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cervantes.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cervantes.CORE.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Cervantes.CORE.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Cervantes.CORE.Cwe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cwe");
                });

            modelBuilder.Entity("Cervantes.CORE.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("Visibility")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Cervantes.CORE.Jira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Assignee")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Interested")
                        .HasColumnType("text");

                    b.Property<string>("JiraComponent")
                        .HasColumnType("text");

                    b.Property<DateTime?>("JiraCreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("JiraIdentifier")
                        .HasColumnType("text");

                    b.Property<string>("JiraKey")
                        .HasColumnType("text");

                    b.Property<string>("JiraProject")
                        .HasColumnType("text");

                    b.Property<string>("JiraStatus")
                        .HasColumnType("text");

                    b.Property<string>("JiraType")
                        .HasColumnType("text");

                    b.Property<DateTime?>("JiraUpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("Reporter")
                        .HasColumnType("text");

                    b.Property<string>("Resolution")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityLevel")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<long?>("Votes")
                        .HasColumnType("bigint");

                    b.Property<Guid>("VulnId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VulnId");

                    b.ToTable("Jira");
                });

            modelBuilder.Entity("Cervantes.CORE.JiraComments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GroupLevel")
                        .HasColumnType("text");

                    b.Property<Guid>("JiraId")
                        .HasColumnType("uuid");

                    b.Property<string>("JiraIdComment")
                        .HasColumnType("text");

                    b.Property<string>("RoleLevel")
                        .HasColumnType("text");

                    b.Property<string>("UpdateAuthor")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("JiraId");

                    b.ToTable("JiraComments");
                });

            modelBuilder.Entity("Cervantes.CORE.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedOn")
                        .HasColumnType("text");

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.Property<string>("Level")
                        .HasColumnType("text");

                    b.Property<string>("Logger")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Cervantes.CORE.MASTG", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ArchNote01")
                        .HasColumnType("text");

                    b.Property<string>("ArchNote02")
                        .HasColumnType("text");

                    b.Property<string>("ArchNote03")
                        .HasColumnType("text");

                    b.Property<string>("ArchNote04")
                        .HasColumnType("text");

                    b.Property<string>("ArchNote05")
                        .HasColumnType("text");

                    b.Property<string>("ArchNote06")
                        .HasColumnType("text");

                    b.Property<string>("ArchNote07")
                        .HasColumnType("text");

                    b.Property<string>("ArchNote08")
                        .HasColumnType("text");

                    b.Property<string>("ArchNote09")
                        .HasColumnType("text");

                    b.Property<string>("ArchNote10")
                        .HasColumnType("text");

                    b.Property<string>("ArchNote11")
                        .HasColumnType("text");

                    b.Property<string>("ArchNote12")
                        .HasColumnType("text");

                    b.Property<int>("ArchStatus01")
                        .HasColumnType("integer");

                    b.Property<int>("ArchStatus02")
                        .HasColumnType("integer");

                    b.Property<int>("ArchStatus03")
                        .HasColumnType("integer");

                    b.Property<int>("ArchStatus04")
                        .HasColumnType("integer");

                    b.Property<int>("ArchStatus05")
                        .HasColumnType("integer");

                    b.Property<int>("ArchStatus06")
                        .HasColumnType("integer");

                    b.Property<int>("ArchStatus07")
                        .HasColumnType("integer");

                    b.Property<int>("ArchStatus08")
                        .HasColumnType("integer");

                    b.Property<int>("ArchStatus09")
                        .HasColumnType("integer");

                    b.Property<int>("ArchStatus10")
                        .HasColumnType("integer");

                    b.Property<int>("ArchStatus11")
                        .HasColumnType("integer");

                    b.Property<int>("ArchStatus12")
                        .HasColumnType("integer");

                    b.Property<string>("AuthNote01")
                        .HasColumnType("text");

                    b.Property<string>("AuthNote02")
                        .HasColumnType("text");

                    b.Property<string>("AuthNote03")
                        .HasColumnType("text");

                    b.Property<string>("AuthNote04")
                        .HasColumnType("text");

                    b.Property<string>("AuthNote05")
                        .HasColumnType("text");

                    b.Property<string>("AuthNote06")
                        .HasColumnType("text");

                    b.Property<string>("AuthNote07")
                        .HasColumnType("text");

                    b.Property<string>("AuthNote08")
                        .HasColumnType("text");

                    b.Property<string>("AuthNote09")
                        .HasColumnType("text");

                    b.Property<string>("AuthNote10")
                        .HasColumnType("text");

                    b.Property<string>("AuthNote11")
                        .HasColumnType("text");

                    b.Property<string>("AuthNote12")
                        .HasColumnType("text");

                    b.Property<int>("AuthStatus01")
                        .HasColumnType("integer");

                    b.Property<int>("AuthStatus02")
                        .HasColumnType("integer");

                    b.Property<int>("AuthStatus03")
                        .HasColumnType("integer");

                    b.Property<int>("AuthStatus04")
                        .HasColumnType("integer");

                    b.Property<int>("AuthStatus05")
                        .HasColumnType("integer");

                    b.Property<int>("AuthStatus06")
                        .HasColumnType("integer");

                    b.Property<int>("AuthStatus07")
                        .HasColumnType("integer");

                    b.Property<int>("AuthStatus08")
                        .HasColumnType("integer");

                    b.Property<int>("AuthStatus09")
                        .HasColumnType("integer");

                    b.Property<int>("AuthStatus10")
                        .HasColumnType("integer");

                    b.Property<int>("AuthStatus11")
                        .HasColumnType("integer");

                    b.Property<int>("AuthStatus12")
                        .HasColumnType("integer");

                    b.Property<string>("CodeNote01")
                        .HasColumnType("text");

                    b.Property<string>("CodeNote02")
                        .HasColumnType("text");

                    b.Property<string>("CodeNote03")
                        .HasColumnType("text");

                    b.Property<string>("CodeNote04")
                        .HasColumnType("text");

                    b.Property<string>("CodeNote05")
                        .HasColumnType("text");

                    b.Property<string>("CodeNote06")
                        .HasColumnType("text");

                    b.Property<string>("CodeNote07")
                        .HasColumnType("text");

                    b.Property<string>("CodeNote08")
                        .HasColumnType("text");

                    b.Property<string>("CodeNote09")
                        .HasColumnType("text");

                    b.Property<int>("CodeStatus01")
                        .HasColumnType("integer");

                    b.Property<int>("CodeStatus02")
                        .HasColumnType("integer");

                    b.Property<int>("CodeStatus03")
                        .HasColumnType("integer");

                    b.Property<int>("CodeStatus04")
                        .HasColumnType("integer");

                    b.Property<int>("CodeStatus05")
                        .HasColumnType("integer");

                    b.Property<int>("CodeStatus06")
                        .HasColumnType("integer");

                    b.Property<int>("CodeStatus07")
                        .HasColumnType("integer");

                    b.Property<int>("CodeStatus08")
                        .HasColumnType("integer");

                    b.Property<int>("CodeStatus09")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CryptoNote01")
                        .HasColumnType("text");

                    b.Property<string>("CryptoNote02")
                        .HasColumnType("text");

                    b.Property<string>("CryptoNote03")
                        .HasColumnType("text");

                    b.Property<string>("CryptoNote04")
                        .HasColumnType("text");

                    b.Property<string>("CryptoNote05")
                        .HasColumnType("text");

                    b.Property<string>("CryptoNote06")
                        .HasColumnType("text");

                    b.Property<int>("CryptoStatus01")
                        .HasColumnType("integer");

                    b.Property<int>("CryptoStatus02")
                        .HasColumnType("integer");

                    b.Property<int>("CryptoStatus03")
                        .HasColumnType("integer");

                    b.Property<int>("CryptoStatus04")
                        .HasColumnType("integer");

                    b.Property<int>("CryptoStatus05")
                        .HasColumnType("integer");

                    b.Property<int>("CryptoStatus06")
                        .HasColumnType("integer");

                    b.Property<string>("NetworkNote01")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote02")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote03")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote04")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote05")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote06")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote07")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote08")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote09")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote10")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote11")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote12")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote13")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote14")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote15")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote16")
                        .HasColumnType("text");

                    b.Property<string>("NetworkNote17")
                        .HasColumnType("text");

                    b.Property<int>("NetworkStatus01")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus02")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus03")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus04")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus05")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus06")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus07")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus08")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus09")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus10")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus11")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus12")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus13")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus14")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus15")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus16")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkStatus17")
                        .HasColumnType("integer");

                    b.Property<string>("PlatformNote01")
                        .HasColumnType("text");

                    b.Property<string>("PlatformNote02")
                        .HasColumnType("text");

                    b.Property<string>("PlatformNote03")
                        .HasColumnType("text");

                    b.Property<string>("PlatformNote04")
                        .HasColumnType("text");

                    b.Property<string>("PlatformNote05")
                        .HasColumnType("text");

                    b.Property<string>("PlatformNote06")
                        .HasColumnType("text");

                    b.Property<string>("PlatformNote07")
                        .HasColumnType("text");

                    b.Property<string>("PlatformNote08")
                        .HasColumnType("text");

                    b.Property<string>("PlatformNote09")
                        .HasColumnType("text");

                    b.Property<string>("PlatformNote10")
                        .HasColumnType("text");

                    b.Property<string>("PlatformNote11")
                        .HasColumnType("text");

                    b.Property<int>("PlatformStatus01")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformStatus02")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformStatus03")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformStatus04")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformStatus05")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformStatus06")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformStatus07")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformStatus08")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformStatus09")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformStatus10")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformStatus11")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("ResilienceNote01")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote02")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote03")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote04")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote05")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote06")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote07")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote08")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote09")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote10")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote11")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote12")
                        .HasColumnType("text");

                    b.Property<string>("ResilienceNote13")
                        .HasColumnType("text");

                    b.Property<int>("ResilienceStatus01")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus02")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus03")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus04")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus05")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus06")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus07")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus08")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus09")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus10")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus11")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus12")
                        .HasColumnType("integer");

                    b.Property<int>("ResilienceStatus13")
                        .HasColumnType("integer");

                    b.Property<string>("StorageNote01")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote02")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote03")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote04")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote05")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote06")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote07")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote08")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote09")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote10")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote11")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote12")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote13")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote14")
                        .HasColumnType("text");

                    b.Property<string>("StorageNote15")
                        .HasColumnType("text");

                    b.Property<int>("StorageStatus01")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus02")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus03")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus04")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus05")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus06")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus07")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus08")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus09")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus10")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus11")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus12")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus13")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus14")
                        .HasColumnType("integer");

                    b.Property<int>("StorageStatus15")
                        .HasColumnType("integer");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TargetId");

                    b.HasIndex("UserId");

                    b.ToTable("MASTG");
                });

            modelBuilder.Entity("Cervantes.CORE.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Cervantes.CORE.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactEmail")
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Cervantes.CORE.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExecutiveSummary")
                        .HasColumnType("text");

                    b.Property<string>("FindingsId")
                        .HasColumnType("text");

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ProjectType")
                        .HasColumnType("integer");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<bool>("Template")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Cervantes.CORE.ProjectAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectAttachments");
                });

            modelBuilder.Entity("Cervantes.CORE.ProjectNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("Visibility")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectNotes");
                });

            modelBuilder.Entity("Cervantes.CORE.ProjectUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectUsers");
                });

            modelBuilder.Entity("Cervantes.CORE.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("Version")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Cervantes.CORE.ReportTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ReportTemplates");
                });

            modelBuilder.Entity("Cervantes.CORE.Target", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("Cervantes.CORE.TargetServices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("Version")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TargetId");

                    b.HasIndex("UserId");

                    b.ToTable("TargetServices");
                });

            modelBuilder.Entity("Cervantes.CORE.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AsignedUserId")
                        .HasColumnType("text");

                    b.Property<string>("CreatedUserId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<bool>("Template")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AsignedUserId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Cervantes.CORE.TaskAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskAttachments");
                });

            modelBuilder.Entity("Cervantes.CORE.TaskNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("Visibility")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskNotes");
                });

            modelBuilder.Entity("Cervantes.CORE.TaskTargets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TargetId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskTargets");
                });

            modelBuilder.Entity("Cervantes.CORE.Vault", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Vaults");
                });

            modelBuilder.Entity("Cervantes.CORE.Vuln", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("CVSS3")
                        .HasColumnType("real");

                    b.Property<string>("CVSSVector")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FindingId")
                        .HasColumnType("text");

                    b.Property<string>("Impact")
                        .HasColumnType("text");

                    b.Property<bool>("JiraCreated")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OWASPImpact")
                        .HasColumnType("text");

                    b.Property<string>("OWASPLikehood")
                        .HasColumnType("text");

                    b.Property<string>("OWASPRisk")
                        .HasColumnType("text");

                    b.Property<string>("OWASPVector")
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProofOfConcept")
                        .HasColumnType("text");

                    b.Property<string>("Remediation")
                        .HasColumnType("text");

                    b.Property<int>("RemediationComplexity")
                        .HasColumnType("integer");

                    b.Property<int>("RemediationPriority")
                        .HasColumnType("integer");

                    b.Property<int>("Risk")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<bool>("Template")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<Guid?>("VulnCategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("cve")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.HasIndex("VulnCategoryId");

                    b.ToTable("Vulns");
                });

            modelBuilder.Entity("Cervantes.CORE.VulnAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<Guid>("VulnId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VulnId");

                    b.ToTable("VulnAttachments");
                });

            modelBuilder.Entity("Cervantes.CORE.VulnCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("VulnCategories");
                });

            modelBuilder.Entity("Cervantes.CORE.VulnCwe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CweId")
                        .HasColumnType("integer");

                    b.Property<Guid>("VulnId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CweId");

                    b.HasIndex("VulnId");

                    b.ToTable("VulnCwe");
                });

            modelBuilder.Entity("Cervantes.CORE.VulnNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("Visibility")
                        .HasColumnType("integer");

                    b.Property<Guid>("VulnId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VulnId");

                    b.ToTable("VulnNotes");
                });

            modelBuilder.Entity("Cervantes.CORE.VulnTargets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("VulnId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TargetId");

                    b.HasIndex("VulnId");

                    b.ToTable("VulnTargets");
                });

            modelBuilder.Entity("Cervantes.CORE.WSTG", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apit01Note")
                        .HasColumnType("text");

                    b.Property<int>("Apit01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn01Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn02Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn03Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn04Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn05Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn06Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn07Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn08Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn09Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn10Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn10Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athz01Note")
                        .HasColumnType("text");

                    b.Property<int>("Athz01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athz02Note")
                        .HasColumnType("text");

                    b.Property<int>("Athz02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athz03Note")
                        .HasColumnType("text");

                    b.Property<int>("Athz03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athz04Note")
                        .HasColumnType("text");

                    b.Property<int>("Athz04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl01Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl02Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl03Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl04Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl05Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl06Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl07Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl08Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl09Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt01Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt02Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt03Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt04Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt05Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt06Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt07Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt08Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt09Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt10Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt10Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt11Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt11Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt12Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt12Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt13Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt13Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf01Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf02Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf03Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf04Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf05Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf06Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf07Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf08Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf09Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf10Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf10Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf11Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf11Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Cryp01Note")
                        .HasColumnType("text");

                    b.Property<int>("Cryp01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Cryp02Note")
                        .HasColumnType("text");

                    b.Property<int>("Cryp02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Cryp03Note")
                        .HasColumnType("text");

                    b.Property<int>("Cryp03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Cryp04Note")
                        .HasColumnType("text");

                    b.Property<int>("Cryp04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Errh01Note")
                        .HasColumnType("text");

                    b.Property<int>("Errh01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Errh02Note")
                        .HasColumnType("text");

                    b.Property<int>("Errh02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Idnt1Note")
                        .HasColumnType("text");

                    b.Property<int>("Idnt1Status")
                        .HasColumnType("integer");

                    b.Property<string>("Idnt2Note")
                        .HasColumnType("text");

                    b.Property<int>("Idnt2Status")
                        .HasColumnType("integer");

                    b.Property<string>("Idnt3Note")
                        .HasColumnType("text");

                    b.Property<int>("Idnt3Status")
                        .HasColumnType("integer");

                    b.Property<string>("Idnt4Note")
                        .HasColumnType("text");

                    b.Property<int>("Idnt4Status")
                        .HasColumnType("integer");

                    b.Property<string>("Idnt5Note")
                        .HasColumnType("text");

                    b.Property<int>("Idnt5Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info01Note")
                        .HasColumnType("text");

                    b.Property<int>("Info01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info02Note")
                        .HasColumnType("text");

                    b.Property<int>("Info02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info03Note")
                        .HasColumnType("text");

                    b.Property<int>("Info03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info04Note")
                        .HasColumnType("text");

                    b.Property<int>("Info04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info05Note")
                        .HasColumnType("text");

                    b.Property<int>("Info05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info06Note")
                        .HasColumnType("text");

                    b.Property<int>("Info06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info07Note")
                        .HasColumnType("text");

                    b.Property<int>("Info07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info08Note")
                        .HasColumnType("text");

                    b.Property<int>("Info08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info09Note")
                        .HasColumnType("text");

                    b.Property<int>("Info09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info10Note")
                        .HasColumnType("text");

                    b.Property<int>("Info10Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv01Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv02Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv03Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv04Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv05Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv06Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv07Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv08Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv09Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv10Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv10Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv11Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv11Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv12Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv12Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv13Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv13Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv14Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv14Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv15Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv15Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv16Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv16Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv17Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv17Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv18Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv18Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv19Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv19Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Sess01Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess02Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess03Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess04Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess05Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess06Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess07Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess08Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess09Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess09Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TargetId");

                    b.HasIndex("UserId");

                    b.ToTable("WSTG");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cervantes.CORE.Client", b =>
                {
                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Document", b =>
                {
                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Jira", b =>
                {
                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cervantes.CORE.Vuln", "Vuln")
                        .WithMany()
                        .HasForeignKey("VulnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vuln");
                });

            modelBuilder.Entity("Cervantes.CORE.JiraComments", b =>
                {
                    b.HasOne("Cervantes.CORE.Jira", "Jira")
                        .WithMany()
                        .HasForeignKey("JiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jira");
                });

            modelBuilder.Entity("Cervantes.CORE.MASTG", b =>
                {
                    b.HasOne("Cervantes.CORE.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Target", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("Target");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Note", b =>
                {
                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Project", b =>
                {
                    b.HasOne("Cervantes.CORE.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.ProjectAttachment", b =>
                {
                    b.HasOne("Cervantes.CORE.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.ProjectNote", b =>
                {
                    b.HasOne("Cervantes.CORE.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.ProjectUser", b =>
                {
                    b.HasOne("Cervantes.CORE.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Report", b =>
                {
                    b.HasOne("Cervantes.CORE.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.ReportTemplate", b =>
                {
                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Target", b =>
                {
                    b.HasOne("Cervantes.CORE.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.TargetServices", b =>
                {
                    b.HasOne("Cervantes.CORE.Target", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Target");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Task", b =>
                {
                    b.HasOne("Cervantes.CORE.ApplicationUser", "AsignedUser")
                        .WithMany()
                        .HasForeignKey("AsignedUserId");

                    b.HasOne("Cervantes.CORE.ApplicationUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("Cervantes.CORE.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AsignedUser");

                    b.Navigation("CreatedUser");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Cervantes.CORE.TaskAttachment", b =>
                {
                    b.HasOne("Cervantes.CORE.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.TaskNote", b =>
                {
                    b.HasOne("Cervantes.CORE.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.TaskTargets", b =>
                {
                    b.HasOne("Cervantes.CORE.Target", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Cervantes.CORE.Vault", b =>
                {
                    b.HasOne("Cervantes.CORE.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Vuln", b =>
                {
                    b.HasOne("Cervantes.CORE.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cervantes.CORE.VulnCategory", "VulnCategory")
                        .WithMany()
                        .HasForeignKey("VulnCategoryId");

                    b.Navigation("Project");

                    b.Navigation("User");

                    b.Navigation("VulnCategory");
                });

            modelBuilder.Entity("Cervantes.CORE.VulnAttachment", b =>
                {
                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cervantes.CORE.Vuln", "Vuln")
                        .WithMany()
                        .HasForeignKey("VulnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vuln");
                });

            modelBuilder.Entity("Cervantes.CORE.VulnCwe", b =>
                {
                    b.HasOne("Cervantes.CORE.Cwe", "Cwe")
                        .WithMany()
                        .HasForeignKey("CweId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Vuln", "Vuln")
                        .WithMany()
                        .HasForeignKey("VulnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cwe");

                    b.Navigation("Vuln");
                });

            modelBuilder.Entity("Cervantes.CORE.VulnNote", b =>
                {
                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cervantes.CORE.Vuln", "Vuln")
                        .WithMany()
                        .HasForeignKey("VulnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vuln");
                });

            modelBuilder.Entity("Cervantes.CORE.VulnTargets", b =>
                {
                    b.HasOne("Cervantes.CORE.Target", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Vuln", "Vuln")
                        .WithMany()
                        .HasForeignKey("VulnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");

                    b.Navigation("Vuln");
                });

            modelBuilder.Entity("Cervantes.CORE.WSTG", b =>
                {
                    b.HasOne("Cervantes.CORE.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Target", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("Target");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Cervantes.CORE.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Cervantes.CORE.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Cervantes.CORE.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
