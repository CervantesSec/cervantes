// <auto-generated />
using System;
using Cervantes.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pgvector;

#nullable disable

namespace Cervantes.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250611083122_TaskModifyDates")]
    partial class TaskModifyDates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "vector");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cervantes.CORE.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("ExternalLogin")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastMessageAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.Property<string>("ApplicationUserId1")
                        .HasColumnType("text");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Vector>("Embedding")
                        .HasColumnType("vector");

                    b.Property<int>("MessageIndex")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ApplicationUserId1");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Cwe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cwe");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Visibility")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Jira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Assignee")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Interested")
                        .HasColumnType("text");

                    b.Property<string>("JiraComponent")
                        .HasColumnType("text");

                    b.Property<DateTime?>("JiraCreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("JiraIdentifier")
                        .HasColumnType("text");

                    b.Property<string>("JiraKey")
                        .HasColumnType("text");

                    b.Property<string>("JiraProject")
                        .HasColumnType("text");

                    b.Property<string>("JiraStatus")
                        .HasColumnType("text");

                    b.Property<string>("JiraType")
                        .HasColumnType("text");

                    b.Property<DateTime?>("JiraUpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("Reporter")
                        .HasColumnType("text");

                    b.Property<string>("Resolution")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityLevel")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("Votes")
                        .HasColumnType("bigint");

                    b.Property<Guid>("VulnId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VulnId");

                    b.ToTable("Jira");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.JiraComments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GroupLevel")
                        .HasColumnType("text");

                    b.Property<Guid>("JiraId")
                        .HasColumnType("uuid");

                    b.Property<string>("JiraIdComment")
                        .HasColumnType("text");

                    b.Property<string>("RoleLevel")
                        .HasColumnType("text");

                    b.Property<string>("UpdateAuthor")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("JiraId");

                    b.ToTable("JiraComments");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.KnowledgeBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("KnowledgeBase");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.KnowledgeBaseCategories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("KnowledgeBaseCategories");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.KnowledgeBaseTags", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("KnowledgeBaseTags");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Logger")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.MASTG", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Auth1Note")
                        .HasColumnType("text");

                    b.Property<int>("Auth1Status")
                        .HasColumnType("integer");

                    b.Property<string>("Auth2Note")
                        .HasColumnType("text");

                    b.Property<string>("Auth2Note1")
                        .HasColumnType("text");

                    b.Property<string>("Auth2Note2")
                        .HasColumnType("text");

                    b.Property<string>("Auth2Note3")
                        .HasColumnType("text");

                    b.Property<int>("Auth2Status")
                        .HasColumnType("integer");

                    b.Property<int>("Auth2Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Auth2Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Auth2Status3")
                        .HasColumnType("integer");

                    b.Property<string>("Auth3Note")
                        .HasColumnType("text");

                    b.Property<int>("Auth3Status")
                        .HasColumnType("integer");

                    b.Property<string>("Code1Note")
                        .HasColumnType("text");

                    b.Property<int>("Code1Status")
                        .HasColumnType("integer");

                    b.Property<string>("Code2Note")
                        .HasColumnType("text");

                    b.Property<string>("Code2Note1")
                        .HasColumnType("text");

                    b.Property<string>("Code2Note2")
                        .HasColumnType("text");

                    b.Property<int>("Code2Status")
                        .HasColumnType("integer");

                    b.Property<int>("Code2Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Code2Status2")
                        .HasColumnType("integer");

                    b.Property<string>("Code3Note")
                        .HasColumnType("text");

                    b.Property<string>("Code3Note1")
                        .HasColumnType("text");

                    b.Property<string>("Code3Note2")
                        .HasColumnType("text");

                    b.Property<int>("Code3Status")
                        .HasColumnType("integer");

                    b.Property<int>("Code3Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Code3Status2")
                        .HasColumnType("integer");

                    b.Property<string>("Code4Note")
                        .HasColumnType("text");

                    b.Property<string>("Code4Note1")
                        .HasColumnType("text");

                    b.Property<string>("Code4Note10")
                        .HasColumnType("text");

                    b.Property<string>("Code4Note2")
                        .HasColumnType("text");

                    b.Property<string>("Code4Note3")
                        .HasColumnType("text");

                    b.Property<string>("Code4Note4")
                        .HasColumnType("text");

                    b.Property<string>("Code4Note5")
                        .HasColumnType("text");

                    b.Property<string>("Code4Note6")
                        .HasColumnType("text");

                    b.Property<string>("Code4Note7")
                        .HasColumnType("text");

                    b.Property<string>("Code4Note8")
                        .HasColumnType("text");

                    b.Property<string>("Code4Note9")
                        .HasColumnType("text");

                    b.Property<int>("Code4Status")
                        .HasColumnType("integer");

                    b.Property<int>("Code4Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Code4Status10")
                        .HasColumnType("integer");

                    b.Property<int>("Code4Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Code4Status3")
                        .HasColumnType("integer");

                    b.Property<int>("Code4Status4")
                        .HasColumnType("integer");

                    b.Property<int>("Code4Status5")
                        .HasColumnType("integer");

                    b.Property<int>("Code4Status6")
                        .HasColumnType("integer");

                    b.Property<int>("Code4Status7")
                        .HasColumnType("integer");

                    b.Property<int>("Code4Status8")
                        .HasColumnType("integer");

                    b.Property<int>("Code4Status9")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Crypto1Note")
                        .HasColumnType("text");

                    b.Property<string>("Crypto1Note1")
                        .HasColumnType("text");

                    b.Property<string>("Crypto1Note2")
                        .HasColumnType("text");

                    b.Property<string>("Crypto1Note3")
                        .HasColumnType("text");

                    b.Property<string>("Crypto1Note4")
                        .HasColumnType("text");

                    b.Property<string>("Crypto1Note5")
                        .HasColumnType("text");

                    b.Property<int>("Crypto1Status")
                        .HasColumnType("integer");

                    b.Property<int>("Crypto1Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Crypto1Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Crypto1Status3")
                        .HasColumnType("integer");

                    b.Property<int>("Crypto1Status4")
                        .HasColumnType("integer");

                    b.Property<int>("Crypto1Status5")
                        .HasColumnType("integer");

                    b.Property<string>("Crypto2Note")
                        .HasColumnType("text");

                    b.Property<string>("Crypto2Note1")
                        .HasColumnType("text");

                    b.Property<string>("Crypto2Note2")
                        .HasColumnType("text");

                    b.Property<int>("Crypto2Status")
                        .HasColumnType("integer");

                    b.Property<int>("Crypto2Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Crypto2Status2")
                        .HasColumnType("integer");

                    b.Property<int>("MobilePlatform")
                        .HasColumnType("integer");

                    b.Property<string>("Network1Note")
                        .HasColumnType("text");

                    b.Property<string>("Network1Note1")
                        .HasColumnType("text");

                    b.Property<string>("Network1Note2")
                        .HasColumnType("text");

                    b.Property<string>("Network1Note3")
                        .HasColumnType("text");

                    b.Property<string>("Network1Note4")
                        .HasColumnType("text");

                    b.Property<string>("Network1Note5")
                        .HasColumnType("text");

                    b.Property<string>("Network1Note6")
                        .HasColumnType("text");

                    b.Property<string>("Network1Note7")
                        .HasColumnType("text");

                    b.Property<int>("Network1Status")
                        .HasColumnType("integer");

                    b.Property<int>("Network1Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Network1Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Network1Status3")
                        .HasColumnType("integer");

                    b.Property<int>("Network1Status4")
                        .HasColumnType("integer");

                    b.Property<int>("Network1Status5")
                        .HasColumnType("integer");

                    b.Property<int>("Network1Status6")
                        .HasColumnType("integer");

                    b.Property<int>("Network1Status7")
                        .HasColumnType("integer");

                    b.Property<string>("Network2Note")
                        .HasColumnType("text");

                    b.Property<string>("Network2Note1")
                        .HasColumnType("text");

                    b.Property<string>("Network2Note2")
                        .HasColumnType("text");

                    b.Property<int>("Network2Status")
                        .HasColumnType("integer");

                    b.Property<int>("Network2Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Network2Status2")
                        .HasColumnType("integer");

                    b.Property<string>("Platform1Note")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note1")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note10")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note11")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note12")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note13")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note2")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note3")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note4")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note5")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note6")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note7")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note8")
                        .HasColumnType("text");

                    b.Property<string>("Platform1Note9")
                        .HasColumnType("text");

                    b.Property<int>("Platform1Status")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status10")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status11")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status12")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status13")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status3")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status4")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status5")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status6")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status7")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status8")
                        .HasColumnType("integer");

                    b.Property<int>("Platform1Status9")
                        .HasColumnType("integer");

                    b.Property<string>("Platform2Note")
                        .HasColumnType("text");

                    b.Property<string>("Platform2Note1")
                        .HasColumnType("text");

                    b.Property<string>("Platform2Note2")
                        .HasColumnType("text");

                    b.Property<string>("Platform2Note3")
                        .HasColumnType("text");

                    b.Property<string>("Platform2Note4")
                        .HasColumnType("text");

                    b.Property<string>("Platform2Note5")
                        .HasColumnType("text");

                    b.Property<string>("Platform2Note6")
                        .HasColumnType("text");

                    b.Property<string>("Platform2Note7")
                        .HasColumnType("text");

                    b.Property<int>("Platform2Status")
                        .HasColumnType("integer");

                    b.Property<int>("Platform2Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Platform2Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Platform2Status3")
                        .HasColumnType("integer");

                    b.Property<int>("Platform2Status4")
                        .HasColumnType("integer");

                    b.Property<int>("Platform2Status5")
                        .HasColumnType("integer");

                    b.Property<int>("Platform2Status6")
                        .HasColumnType("integer");

                    b.Property<int>("Platform2Status7")
                        .HasColumnType("integer");

                    b.Property<string>("Platform3Note")
                        .HasColumnType("text");

                    b.Property<string>("Platform3Note1")
                        .HasColumnType("text");

                    b.Property<string>("Platform3Note2")
                        .HasColumnType("text");

                    b.Property<string>("Platform3Note3")
                        .HasColumnType("text");

                    b.Property<string>("Platform3Note4")
                        .HasColumnType("text");

                    b.Property<string>("Platform3Note5")
                        .HasColumnType("text");

                    b.Property<int>("Platform3Status")
                        .HasColumnType("integer");

                    b.Property<int>("Platform3Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Platform3Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Platform3Status3")
                        .HasColumnType("integer");

                    b.Property<int>("Platform3Status4")
                        .HasColumnType("integer");

                    b.Property<int>("Platform3Status5")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Resilience1Note")
                        .HasColumnType("text");

                    b.Property<string>("Resilience1Note1")
                        .HasColumnType("text");

                    b.Property<string>("Resilience1Note2")
                        .HasColumnType("text");

                    b.Property<string>("Resilience1Note3")
                        .HasColumnType("text");

                    b.Property<string>("Resilience1Note4")
                        .HasColumnType("text");

                    b.Property<int>("Resilience1Status")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience1Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience1Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience1Status3")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience1Status4")
                        .HasColumnType("integer");

                    b.Property<string>("Resilience2Note")
                        .HasColumnType("text");

                    b.Property<string>("Resilience2Note1")
                        .HasColumnType("text");

                    b.Property<string>("Resilience2Note2")
                        .HasColumnType("text");

                    b.Property<string>("Resilience2Note3")
                        .HasColumnType("text");

                    b.Property<string>("Resilience2Note4")
                        .HasColumnType("text");

                    b.Property<string>("Resilience2Note5")
                        .HasColumnType("text");

                    b.Property<int>("Resilience2Status")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience2Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience2Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience2Status3")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience2Status4")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience2Status5")
                        .HasColumnType("integer");

                    b.Property<string>("Resilience3Note")
                        .HasColumnType("text");

                    b.Property<string>("Resilience3Note1")
                        .HasColumnType("text");

                    b.Property<string>("Resilience3Note2")
                        .HasColumnType("text");

                    b.Property<string>("Resilience3Note3")
                        .HasColumnType("text");

                    b.Property<string>("Resilience3Note4")
                        .HasColumnType("text");

                    b.Property<string>("Resilience3Note5")
                        .HasColumnType("text");

                    b.Property<string>("Resilience3Note6")
                        .HasColumnType("text");

                    b.Property<int>("Resilience3Status")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience3Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience3Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience3Status3")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience3Status4")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience3Status5")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience3Status6")
                        .HasColumnType("integer");

                    b.Property<string>("Resilience4Note")
                        .HasColumnType("text");

                    b.Property<string>("Resilience4Note1")
                        .HasColumnType("text");

                    b.Property<string>("Resilience4Note2")
                        .HasColumnType("text");

                    b.Property<string>("Resilience4Note3")
                        .HasColumnType("text");

                    b.Property<string>("Resilience4Note4")
                        .HasColumnType("text");

                    b.Property<string>("Resilience4Note5")
                        .HasColumnType("text");

                    b.Property<string>("Resilience4Note6")
                        .HasColumnType("text");

                    b.Property<int>("Resilience4Status")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience4Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience4Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience4Status3")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience4Status4")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience4Status5")
                        .HasColumnType("integer");

                    b.Property<int>("Resilience4Status6")
                        .HasColumnType("integer");

                    b.Property<string>("Storage1Note")
                        .HasColumnType("text");

                    b.Property<string>("Storage1Note1")
                        .HasColumnType("text");

                    b.Property<string>("Storage1Note2")
                        .HasColumnType("text");

                    b.Property<string>("Storage1Note3")
                        .HasColumnType("text");

                    b.Property<int>("Storage1Status")
                        .HasColumnType("integer");

                    b.Property<int>("Storage1Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Storage1Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Storage1Status3")
                        .HasColumnType("integer");

                    b.Property<string>("Storage2Note")
                        .HasColumnType("text");

                    b.Property<string>("Storage2Note1")
                        .HasColumnType("text");

                    b.Property<string>("Storage2Note10")
                        .HasColumnType("text");

                    b.Property<string>("Storage2Note11")
                        .HasColumnType("text");

                    b.Property<string>("Storage2Note2")
                        .HasColumnType("text");

                    b.Property<string>("Storage2Note3")
                        .HasColumnType("text");

                    b.Property<string>("Storage2Note4")
                        .HasColumnType("text");

                    b.Property<string>("Storage2Note5")
                        .HasColumnType("text");

                    b.Property<string>("Storage2Note6")
                        .HasColumnType("text");

                    b.Property<string>("Storage2Note7")
                        .HasColumnType("text");

                    b.Property<string>("Storage2Note8")
                        .HasColumnType("text");

                    b.Property<string>("Storage2Note9")
                        .HasColumnType("text");

                    b.Property<int>("Storage2Status")
                        .HasColumnType("integer");

                    b.Property<int>("Storage2Status1")
                        .HasColumnType("integer");

                    b.Property<int>("Storage2Status10")
                        .HasColumnType("integer");

                    b.Property<int>("Storage2Status11")
                        .HasColumnType("integer");

                    b.Property<int>("Storage2Status2")
                        .HasColumnType("integer");

                    b.Property<int>("Storage2Status3")
                        .HasColumnType("integer");

                    b.Property<int>("Storage2Status4")
                        .HasColumnType("integer");

                    b.Property<int>("Storage2Status5")
                        .HasColumnType("integer");

                    b.Property<int>("Storage2Status6")
                        .HasColumnType("integer");

                    b.Property<int>("Storage2Status7")
                        .HasColumnType("integer");

                    b.Property<int>("Storage2Status8")
                        .HasColumnType("integer");

                    b.Property<int>("Storage2Status9")
                        .HasColumnType("integer");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TargetId");

                    b.HasIndex("UserId");

                    b.ToTable("MASTG");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BusinessImpact")
                        .HasColumnType("integer");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExecutiveSummary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FindingsId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProjectType")
                        .HasColumnType("integer");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<bool>("Template")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ProjectAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectAttachments");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ProjectNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Visibility")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectNotes");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ProjectUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectUsers");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HtmlCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<int>("ReportType")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ReportComponents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ComponentType")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentCss")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ReportComponents");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ReportParts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComponentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<int>("PartType")
                        .HasColumnType("integer");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("TemplateId");

                    b.ToTable("ReportParts");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ReportTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ReportType")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ReportTemplates");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.RssCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RssCategory");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.RssNews", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.HasIndex("UserId");

                    b.ToTable("RssNews");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.RssSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("RssSource");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Target", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.TargetServices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TargetId");

                    b.HasIndex("UserId");

                    b.ToTable("TargetServices");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AsignedUserId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<bool>("Template")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AsignedUserId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.TaskAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskAttachments");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.TaskNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Visibility")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskNotes");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.TaskTargets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TargetId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskTargets");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Vault", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Vaults");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Vuln", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("CVSS3")
                        .HasColumnType("double precision");

                    b.Property<string>("CVSSVector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FindingId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("JiraCreated")
                        .HasColumnType("boolean");

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<string>("MitreTechniques")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MitreValues")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OWASPImpact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OWASPLikehood")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OWASPRisk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OWASPVector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProofOfConcept")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Remediation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RemediationComplexity")
                        .HasColumnType("integer");

                    b.Property<int>("RemediationPriority")
                        .HasColumnType("integer");

                    b.Property<int>("Risk")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<bool>("Template")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("VulnCategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("cve")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.HasIndex("VulnCategoryId");

                    b.ToTable("Vulns");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.VulnAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VulnId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VulnId");

                    b.ToTable("VulnAttachments");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.VulnCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("VulnCategories");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.VulnCwe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CweId")
                        .HasColumnType("integer");

                    b.Property<Guid>("VulnId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CweId");

                    b.HasIndex("VulnId");

                    b.ToTable("VulnCwe");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.VulnNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Visibility")
                        .HasColumnType("integer");

                    b.Property<Guid>("VulnId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VulnId");

                    b.ToTable("VulnNotes");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.VulnTargets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("VulnId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TargetId");

                    b.HasIndex("VulnId");

                    b.ToTable("VulnTargets");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.WSTG", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apit01Note")
                        .HasColumnType("text");

                    b.Property<int>("Apit01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn01Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn02Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn03Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn04Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn05Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn06Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn07Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn08Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn09Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athn10Note")
                        .HasColumnType("text");

                    b.Property<int>("Athn10Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athz01Note")
                        .HasColumnType("text");

                    b.Property<int>("Athz01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athz02Note")
                        .HasColumnType("text");

                    b.Property<int>("Athz02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athz03Note")
                        .HasColumnType("text");

                    b.Property<int>("Athz03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Athz04Note")
                        .HasColumnType("text");

                    b.Property<int>("Athz04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl01Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl02Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl03Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl04Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl05Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl06Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl07Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl08Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Busl09Note")
                        .HasColumnType("text");

                    b.Property<int>("Busl09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt01Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt02Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt03Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt04Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt05Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt06Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt07Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt08Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt09Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt10Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt10Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt11Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt11Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt12Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt12Status")
                        .HasColumnType("integer");

                    b.Property<string>("Clnt13Note")
                        .HasColumnType("text");

                    b.Property<int>("Clnt13Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf01Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf02Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf03Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf04Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf05Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf06Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf07Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf08Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf09Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf10Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf10Status")
                        .HasColumnType("integer");

                    b.Property<string>("Conf11Note")
                        .HasColumnType("text");

                    b.Property<int>("Conf11Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Cryp01Note")
                        .HasColumnType("text");

                    b.Property<int>("Cryp01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Cryp02Note")
                        .HasColumnType("text");

                    b.Property<int>("Cryp02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Cryp03Note")
                        .HasColumnType("text");

                    b.Property<int>("Cryp03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Cryp04Note")
                        .HasColumnType("text");

                    b.Property<int>("Cryp04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Errh01Note")
                        .HasColumnType("text");

                    b.Property<int>("Errh01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Errh02Note")
                        .HasColumnType("text");

                    b.Property<int>("Errh02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Idnt01Note")
                        .HasColumnType("text");

                    b.Property<int>("Idnt01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Idnt02Note")
                        .HasColumnType("text");

                    b.Property<int>("Idnt02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Idnt03Note")
                        .HasColumnType("text");

                    b.Property<int>("Idnt03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Idnt04Note")
                        .HasColumnType("text");

                    b.Property<int>("Idnt04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Idnt05Note")
                        .HasColumnType("text");

                    b.Property<int>("Idnt05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info01Note")
                        .HasColumnType("text");

                    b.Property<int>("Info01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info02Note")
                        .HasColumnType("text");

                    b.Property<int>("Info02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info03Note")
                        .HasColumnType("text");

                    b.Property<int>("Info03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info04Note")
                        .HasColumnType("text");

                    b.Property<int>("Info04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info05Note")
                        .HasColumnType("text");

                    b.Property<int>("Info05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info06Note")
                        .HasColumnType("text");

                    b.Property<int>("Info06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info07Note")
                        .HasColumnType("text");

                    b.Property<int>("Info07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info08Note")
                        .HasColumnType("text");

                    b.Property<int>("Info08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info09Note")
                        .HasColumnType("text");

                    b.Property<int>("Info09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Info10Note")
                        .HasColumnType("text");

                    b.Property<int>("Info10Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv01Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv02Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv03Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv04Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv05Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv06Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv07Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv08Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv09Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv09Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv10Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv10Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv11Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv11Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv12Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv12Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv13Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv13Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv14Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv14Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv15Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv15Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv16Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv16Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv17Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv17Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv18Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv18Status")
                        .HasColumnType("integer");

                    b.Property<string>("Inpv19Note")
                        .HasColumnType("text");

                    b.Property<int>("Inpv19Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Sess01Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess01Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess02Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess02Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess03Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess03Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess04Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess04Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess05Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess05Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess06Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess06Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess07Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess07Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess08Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess08Status")
                        .HasColumnType("integer");

                    b.Property<string>("Sess09Note")
                        .HasColumnType("text");

                    b.Property<int>("Sess09Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TargetId");

                    b.HasIndex("UserId");

                    b.ToTable("WSTG");
                });

            modelBuilder.Entity("KnowledgeBaseKnowledgeBaseTags", b =>
                {
                    b.Property<Guid>("NotesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uuid");

                    b.HasKey("NotesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("KnowledgeBaseKnowledgeBaseTags");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Chat", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ChatMessage", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", null)
                        .WithMany("ChatMessagesFromUsers")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", null)
                        .WithMany("ChatMessagesToUsers")
                        .HasForeignKey("ApplicationUserId1");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Client", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Document", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Jira", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.Vuln", "Vuln")
                        .WithMany()
                        .HasForeignKey("VulnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vuln");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.JiraComments", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Jira", "Jira")
                        .WithMany()
                        .HasForeignKey("JiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jira");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.KnowledgeBase", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.KnowledgeBaseCategories", "Category")
                        .WithMany("Pages")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("CreatedUser");

                    b.Navigation("UpdatedUser");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.KnowledgeBaseCategories", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.MASTG", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.Target", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("Target");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Note", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Project", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ProjectAttachment", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ProjectNote", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ProjectUser", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Report", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ReportParts", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ReportComponents", "Component")
                        .WithMany()
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ReportTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Component");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ReportTemplate", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.RssNews", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.RssSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.RssSource", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.RssCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Target", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.TargetServices", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Target", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Task", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "AsignedUser")
                        .WithMany()
                        .HasForeignKey("AsignedUserId");

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("AsignedUser");

                    b.Navigation("CreatedUser");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.TaskAttachment", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.TaskNote", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.TaskTargets", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Target", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Vault", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Vuln", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.VulnCategory", "VulnCategory")
                        .WithMany()
                        .HasForeignKey("VulnCategoryId");

                    b.Navigation("Project");

                    b.Navigation("User");

                    b.Navigation("VulnCategory");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.VulnAttachment", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.Vuln", "Vuln")
                        .WithMany()
                        .HasForeignKey("VulnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vuln");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.VulnCwe", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Cwe", "Cwe")
                        .WithMany()
                        .HasForeignKey("CweId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.Vuln", "Vuln")
                        .WithMany("VulnCwes")
                        .HasForeignKey("VulnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cwe");

                    b.Navigation("Vuln");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.VulnNote", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.Vuln", "Vuln")
                        .WithMany()
                        .HasForeignKey("VulnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vuln");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.VulnTargets", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Target", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.Vuln", "Vuln")
                        .WithMany("VulnTargets")
                        .HasForeignKey("VulnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");

                    b.Navigation("Vuln");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.WSTG", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.Target", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("Target");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KnowledgeBaseKnowledgeBaseTags", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.KnowledgeBase", null)
                        .WithMany()
                        .HasForeignKey("NotesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.KnowledgeBaseTags", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Cervantes.CORE.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.ApplicationUser", b =>
                {
                    b.Navigation("ChatMessagesFromUsers");

                    b.Navigation("ChatMessagesToUsers");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.KnowledgeBaseCategories", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("Cervantes.CORE.Entities.Vuln", b =>
                {
                    b.Navigation("VulnCwes");

                    b.Navigation("VulnTargets");
                });
#pragma warning restore 612, 618
        }
    }
}
