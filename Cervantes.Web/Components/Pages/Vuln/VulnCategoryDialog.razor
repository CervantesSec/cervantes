@rendermode InteractiveServer
@using Cervantes.CORE
@using Task = System.Threading.Tasks.Task;
@using FluentValidation;
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Localization
@using Variant = MudBlazor.Variant
@using Cervantes.Web.Localization
@using Cervantes.CORE.Entities
@using global::AuthPermissions.AspNetCore
@using global::AuthPermissions.BaseCode.PermissionsCode
@using TaskStatus = Cervantes.CORE.Entities.TaskStatus
@inject IStringLocalizer<Resource> localizer
@inject IDialogService Dialog
@inject IJSRuntime JS
@attribute [HasPermission(Permissions.VulnCategoriesRead)]
@inject AuthenticationStateProvider authenticationStateProvider


<style>
	.tox-tinymce-aux {
        z-index: 999999!important;
    }
</style>

<MudDialog Class="mud-ex-dialog-initial" DisableSidePadding="true">
	<TitleContent>
		            <MudItem Class="d-flex flex-wrap justify-space-around gap-1">

		<MudText Typo="Typo.h4"><MudIcon Icon="@Icons.Material.Filled.Category"/> @category.Name</MudText>
		<MudSpacer/>
		
		@if (userAth.HasPermission(Permissions.VulnCategoriesEdit))
		{
			@if (editMode)
			{
				<MudIconButton Icon="@Icons.Material.Filled.RemoveRedEye" Color="Color.Primary" aria-label="delete" OnClick="@((e) => EditMode())"></MudIconButton>
			}
			else
			{
				<MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Warning" aria-label="delete" OnClick="@((e) => EditMode())"></MudIconButton>

			}
		}
		
		@if (userAth.HasPermission(Permissions.VulnCategoriesDelete))
		{
			<MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Secondary" aria-label="delete" OnClick="@((e) => DeleteVulnCategoryDialog(@category, medium))"></MudIconButton>
		}


		            </MudItem>
	</TitleContent>
	<DialogContent>
		@if (editMode)
        	{
			        <MudContainer MaxWidth="MaxWidth.False" Style="max-height: 1000px; overflow-y: scroll;">
				        <MudForm Model="@model" @ref="@form" Validation="@(vulnValidator.ValidateValue)" ValidationDelay="0">
                                        
					        <MudTextField @bind-Value="model.Name" For="@(() => model.Name)" Immediate="true" Label="@localizer["name"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Category"/>
					        <MudTextField @bind-Value="model.Description" For="@(() => model.Description)" Label="@localizer["description"]" Lines="3" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Description"/>
					        <MudSelect @bind-Value="model.Type" For="@(() => model.Type)" Label="@localizer["type"]" AdornmentIcon="@Icons.Material.Filled.Category" Adornment="Adornment.Start" TransformOrigin="Origin.BottomCenter" AnchorOrigin="Origin.BottomCenter" PopoverClass="fixed">
						        @foreach (VulnCategoryType item in Enum.GetValues(typeof(VulnCategoryType)))
						        {
							        <MudSelectItem Value="@item">@item.ToString()</MudSelectItem>
						        }
					        </MudSelect>
                                        
                                        
				        </MudForm>
				        
				        
			        </MudContainer>
		        
	        }
		else
		{
			<MudGrid>
				<MudItem xs="12" sm="4" md="3">
					<MudCard Elevation="25">
						<MudCardContent>
							<div class="d-flex justify-center mb-4">
								<MudIcon Color="Color.Default" Icon="@Icons.Material.Filled.Note" Size="Size.Large" />
							</div>
							<MudList T="string" Dense="true">
								<MudListItem T="string" Text="@category.Name" Icon="@Icons.Material.Filled.Category" />
								<MudListItem T="string" Text="@category.Type.ToString()" Icon="@Icons.Material.Filled.Category" />
							</MudList>
						</MudCardContent>
					</MudCard>
				</MudItem>
				<MudItem xs="12" sm="8" md="9">
					<MudCard Elevation="25">
						<MudCardHeader>
							<CardHeaderContent>
								<MudText>@localizer["description"]</MudText>
							</CardHeaderContent>
						</MudCardHeader>
						<MudCardContent>
							@((MarkupString)category.Description)
						</MudCardContent>
					</MudCard>
				</MudItem>
			</MudGrid>

		}
		
	</DialogContent>
	<DialogActions>
		<MudButton Variant="Variant.Filled" Color="@Color.Default" OnClick="Cancel">@localizer["cancel"]</MudButton>
		@if (userAth.HasPermission(Permissions.VulnCategoriesEdit))
		{
			@if (editMode)
			{
				<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="@Color.Primary" OnClick="Submit">@localizer["save"]</MudButton>
			}
		}
		
	</DialogActions>
</MudDialog>
