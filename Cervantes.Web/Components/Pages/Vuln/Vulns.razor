@rendermode InteractiveServer
@page "/vulns"
@page "/vulns/{vuln:guid}"
@using Microsoft.AspNetCore.Authorization
@using Cervantes.CORE
@using Cervantes.CORE.Entities
@using Cervantes.CORE.ViewModel
@using DialogOptions = MudBlazor.DialogOptions
@using Task = System.Threading.Tasks.Task
@using Variant = MudBlazor.Variant
@using Cervantes.CORE.ViewModels
@using Cervantes.Web.Localization
@using Microsoft.Extensions.Localization
@inject IDialogService DialogService
@using TinyMCE.Blazor
@inject IStringLocalizer<Resource> localizer
@inject NavigationManager navigationManager
@inject IHttpContextAccessor _accessor
@using Blazor.Flags
@inject IJSRuntime JS
@inject ISnackbar Snackbar
<PageTitle>@localizer["vulns"] | Cervantes</PageTitle>

<AuthorizeView Context="innerContext" Roles="SuperUser,User,Admin">
<MudGrid>
<MudItem xs="12" sm="12" md="12" Class="mt-5">
    <MudStack Row="true">
    
        <MudItem xs="12" sm="4" md="4">
            <MudText Typo="Typo.h4">
                <MudText Typo="Typo.h4">
                    <MudText Typo="Typo.h4">
                        <MudIcon Icon="@Icons.Material.Filled.BugReport"/> @localizer["vulns"]
                    </MudText>
                </MudText>
            </MudText>
    
        </MudItem>
        <MudItem xs="12" sm="8" md="8">
            <div class="d-flex justify-end">
                <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
            </div>
        </MudItem>
    </MudStack>
    
</MudItem>
<MudItem xs="12" sm="12" md="12">
    <MudTabs Elevation="25" Color="Color.Transparent" Rounded="true" PanelClass="mt-6">
        <MudTabPanel Text="@localizer["vulns"]" Icon="@Icons.Material.Filled.BugReport" BadgeData="@model.Count(x => x.Template == false)" BadgeColor="Color.Primary" Style="min-width: 260px;">
            <MudDataGrid T="Vuln" Items="@model.Where(x => x.Template == false)" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="_quickFilter"
                         Hideable="true" Hover="true" RowClick="@RowClicked" MultiSelection="true" SelectedItemsChanged="@SelectedItemsChanged" Virtualize="true" DragDropColumnReordering="true"> 
                <ToolBarContent>
                    <MudStack Row="true">
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="@((e) => OpenDialogCreate(maxWidth))">@localizer["create"]</MudButton>
                        <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.ImportExport" Color="Color.Primary" OnClick="@((e) => OpenDialogImport(maxWidth))">@localizer["import"]</MudButton>
                        <MudButton Href="/vulns/categories"
                                       Variant="Variant.Outlined"
                                       StartIcon="@Icons.Material.Filled.Category"
                                       Color="Color.Primary">
                                @localizer["categories"]
                            </MudButton>
                        @if (seleVulns.Count() != 0)
                        {
                            <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
                                <MudButton>@localizer["actions"]</MudButton>
                                <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" Style="align-self: auto;">
                                    <MudMenuItem OnClick="@((e) => BtnActions(0))">@localizer["deleteVuln"]</MudMenuItem>
                                    @if (jiraEnabled)
                                    {
                                        <MudMenuItem OnClick="@((e) => BtnActions(1))">@localizer["createJira"]</MudMenuItem>
                                        <MudMenuItem OnClick="@((e) => BtnActions(2))">@localizer["deleteJira"]</MudMenuItem>
                                    
                                    }
                                    
                                </MudMenu>
                            </MudButtonGroup>
                        }

                    </MudStack>
                    <MudSpacer/>
                    <MudTextField @bind-Value="searchString" Placeholder="@localizer["search"]" Adornment="Adornment.Start" Immediate="true"
                                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0">
                    </MudTextField>
                </ToolBarContent>
                <Columns>
                    <SelectColumn T="Vuln"/>
    
                    <PropertyColumn Property="x => x.Name" Title="@localizer["name"]"/>
                    <PropertyColumn Property="x => x.Language" Title="@localizer["language"]">
                        <CellTemplate>
                            @switch (@context.Item.Language)
                            {
                                case Language.English:
                                    <CountryFlag Country="Country.US" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
                                    break;
                                case Language.Español:
                                    <CountryFlag Country="Country.ES" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
    
                                    break;
                                case Language.Português:
                                    <MudStack Row="true" Spacing="0">
                                        <CountryFlag Country="Country.PT" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
                                        <CountryFlag Country="Country.BR" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
                                    </MudStack>
                                    break;
                            }
    
                        </CellTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.CreatedDate" Title="@localizer["createdDate"]">
                        <CellTemplate>
                            <MudStack Row="true">
                                <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Size="Size.Small"/>
                                <MudStack Justify="Justify.Center" Spacing="0">
                                    <MudText Typo="Typo.body1">@context.Item.CreatedDate.ToShortDateString()</MudText>
                                </MudStack>
                            </MudStack>
    
                        </CellTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.ModifiedDate" Title="@localizer["modifiedDate"]">
                        <CellTemplate>
                            <MudStack Row="true">
                                <MudIcon Icon="@Icons.Material.Filled.EditCalendar" Size="Size.Small"/>
                                <MudStack Justify="Justify.Center" Spacing="0">
                                    <MudText Typo="Typo.body1">@context.Item.ModifiedDate.ToShortDateString()</MudText>
                                </MudStack>
                            </MudStack>
    
                        </CellTemplate>
                    </PropertyColumn>
                    <TemplateColumn Property="x => x.Project.Name" Title="@localizer["project"]">
                        <CellTemplate>
                            <MudStack Row="true">
                                @if (@context.Item.Project == null)
                                {
                                    <MudIcon Icon="@Icons.Material.Filled.FolderOpen" Size="Size.Small"/>
                                    <MudStack Justify="Justify.Center" Spacing="0">
                                        <MudText Typo="Typo.body1">@localizer["noProject"]</MudText>
                                    </MudStack>
                                        
                                }
                                else
                                {
                                    <MudIcon Icon="@Icons.Material.Filled.Folder" Size="Size.Small"/>
                                    <MudStack Justify="Justify.Center" Spacing="0">
                                        <MudText Typo="Typo.body1">@context.Item.Project.Name</MudText>
                                    </MudStack>
                                        
                                }
                 
                            </MudStack>
                                
                        </CellTemplate>
                    </TemplateColumn>
    
                    <PropertyColumn Property="x => x.Risk" Title="@localizer["risk"]">
                        <CellTemplate>
                            @switch (@context.Item.Risk)
                            {
                                case VulnRisk.Critical:
                                    <MudChip Color="Color.Secondary" Icon="@Icons.Material.Filled.CrisisAlert">@localizer["critical"]</MudChip>
                                    break;
                                case VulnRisk.High:
                                    <MudChip Color="Color.Error" Icon="@Icons.Material.Filled.Error">@localizer["high"]</MudChip>
                                    break;
                                case VulnRisk.Medium:
                                    <MudChip Color="Color.Warning" Icon="@Icons.Material.Filled.ErrorOutline">@localizer["medium"]</MudChip>
                                    break;
                                case VulnRisk.Low:
                                    <MudChip Color="Color.Success" Icon="@Icons.Material.Filled.Flag">@localizer["low"]</MudChip>
                                    break;
                                case VulnRisk.Info:
                                    <MudChip Color="Color.Info" Icon="@Icons.Material.Filled.Info">@localizer["info"]</MudChip>
                                    break;
                            }
    
                        </CellTemplate>
    
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.Status" Title="@localizer["status"]">
                        <CellTemplate>
                            @switch (@context.Item.Status)
                            {
                                case VulnStatus.Accepted:
                                    <MudChip Color="Color.Warning" Icon="@Icons.Material.Filled.CheckCircle">@localizer["accepted"]</MudChip>
                                    break;
                                case VulnStatus.Confirmed:
                                    <MudChip Color="Color.Error" Icon="@Icons.Material.Filled.CheckBox">@localizer["confirmed"]</MudChip>
                                    break;
                                case VulnStatus.Invalid:
                                    <MudChip Color="Color.Primary" Icon="@Icons.Material.Filled.ErrorOutline">@localizer["invalid"]</MudChip>
                                    break;
                                case VulnStatus.Open:
                                    <MudChip Color="Color.Info" Icon="@Icons.Material.Filled.Flag">@localizer["open"]</MudChip>
                                    break;
                                case VulnStatus.OutOfScope:
                                    <MudChip Color="Color.Primary" Icon="@Icons.Material.Filled.ErrorOutline">@localizer["outOfScope"]</MudChip>
                                    break;
                                case VulnStatus.Resolved:
                                    <MudChip Color="Color.Success" Icon="@Icons.Material.Filled.Check">@localizer["resolved"]</MudChip>
                                    break;
                            }
    
                        </CellTemplate>
    
                    </PropertyColumn>
                    
                    @if (jiraEnabled)
                    {
                        <PropertyColumn Property="x => x.JiraCreated" Title="@localizer["jiraCreated"]">
                            <CellTemplate Context="cellContext">
                                @if (@cellContext.Item.JiraCreated)
                                {
                                    <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Success"/>
                                }
                                else
                                {
                                    <MudIcon Icon="@Icons.Material.Filled.Cancel" Color="Color.Error"/>
                                }
                            </CellTemplate>
                        </PropertyColumn>
                    }
    
                </Columns>
                <PagerContent>
                    <MudDataGridPager T="Vuln"/>
                </PagerContent>
            </MudDataGrid>
        </MudTabPanel>
        <MudTabPanel Text="@localizer["templates"]" Icon="@Icons.Material.Filled.FileCopy" BadgeData="@model.Count(x => x.Template == true)" BadgeColor="Color.Primary">
            <MudDataGrid T="Vuln" Items="@model.Where(x => x.Template == true)" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="_quickFilter"
                         Hideable="true" Hover="true" Elevation="25" RowClick="@RowClicked" MultiSelection="true" SelectedItemsChanged="@SelectedItemsChanged" Virtualize="true" DragDropColumnReordering="true">
                <ToolBarContent>
                    <MudStack Row="true">
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="@((e) => OpenDialogCreate(maxWidth))">@localizer["create"]</MudButton>
                        <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.ImportExport" Color="Color.Primary" OnClick="@((e) => OpenDialogImport(maxWidth))">@localizer["import"]</MudButton>
                        @if (seleVulns.Count() != 0)
                        {
                            <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
                                <MudButton>@localizer["actions"]</MudButton>
                                <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" Style="align-self: auto;">
                                    <MudMenuItem OnClick="@((e) => BtnActions(0))">@localizer["delete"]</MudMenuItem>
                                </MudMenu>
                            </MudButtonGroup>
                        }
    
                        <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
                            <MudButton>@localizer["export"]</MudButton>
                            <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" Style="align-self: auto;">
                                <MudMenuItem OnClick="@((e) => Export(0))">CSV</MudMenuItem>
                            </MudMenu>
                        </MudButtonGroup>
                    </MudStack>
                    <MudSpacer/>
                    <MudTextField @bind-Value="searchString" Placeholder="@localizer["search"]" Adornment="Adornment.Start" Immediate="true"
                                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0">
                    </MudTextField>
                </ToolBarContent>
                <Columns>
                    <SelectColumn T="Vuln"/>
                        
                    <PropertyColumn Property="x => x.Name" Title="@localizer["name"]"/>
                    <PropertyColumn Property="x => x.Language" Title="@localizer["language"]">
                        <CellTemplate>
                            @switch (@context.Item.Language)
                            {
                                case Language.English:
                                    <CountryFlag Country="Country.US" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
                                    break;
                                case Language.Español:
                                    <CountryFlag Country="Country.ES" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
                        
                                    break;
                                case Language.Português:
                                    <MudStack Row="true" Spacing="0">
                                        <CountryFlag Country="Country.PT" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
                                        <CountryFlag Country="Country.BR" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
                                    </MudStack>
                                    break;
                            }
                        
                        </CellTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.CreatedDate" Title="@localizer["createdDate"]">
                        <CellTemplate>
                            <MudStack Row="true">
                                <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Size="Size.Small"/>
                                <MudStack Justify="Justify.Center" Spacing="0">
                                    <MudText Typo="Typo.body1">@context.Item.CreatedDate.ToShortDateString()</MudText>
                                </MudStack>
                            </MudStack>
                        
                        </CellTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.ModifiedDate" Title="@localizer["modifiedDate"]">
                        <CellTemplate>
                            <MudStack Row="true">
                                <MudIcon Icon="@Icons.Material.Filled.EditCalendar" Size="Size.Small"/>
                                <MudStack Justify="Justify.Center" Spacing="0">
                                    <MudText Typo="Typo.body1">@context.Item.ModifiedDate.ToShortDateString()</MudText>
                                </MudStack>
                            </MudStack>
                        
                        </CellTemplate>
                    </PropertyColumn>
                    <TemplateColumn Property="x => x.Project.Name" Title="@localizer["project"]">
                        <CellTemplate>
                            <MudStack Row="true">
                                @if (@context.Item.Project == null)
                                {
                                    <MudIcon Icon="@Icons.Material.Filled.FolderOpen" Size="Size.Small"/>
                                    <MudStack Justify="Justify.Center" Spacing="0">
                                        <MudText Typo="Typo.body1">@localizer["noProject"]</MudText>
                                    </MudStack>
                                                            
                                }
                                else
                                {
                                    <MudIcon Icon="@Icons.Material.Filled.Folder" Size="Size.Small"/>
                                    <MudStack Justify="Justify.Center" Spacing="0">
                                        <MudText Typo="Typo.body1">@context.Item.Project.Name</MudText>
                                    </MudStack>
                                                            
                                }
                                     
                            </MudStack>
                                                    
                        </CellTemplate>
                    </TemplateColumn>
                        
                    <PropertyColumn Property="x => x.Risk" Title="@localizer["risk"]">
                        <CellTemplate>
                            @switch (@context.Item.Risk)
                            {
                                case VulnRisk.Critical:
                                    <MudChip Color="Color.Secondary" Icon="@Icons.Material.Filled.CrisisAlert">@localizer["critical"]</MudChip>
                                    break;
                                case VulnRisk.High:
                                    <MudChip Color="Color.Error" Icon="@Icons.Material.Filled.Error">@localizer["high"]</MudChip>
                                    break;
                                case VulnRisk.Medium:
                                    <MudChip Color="Color.Warning" Icon="@Icons.Material.Filled.ErrorOutline">@localizer["medium"]</MudChip>
                                    break;
                                case VulnRisk.Low:
                                    <MudChip Color="Color.Success" Icon="@Icons.Material.Filled.Flag">@localizer["low"]</MudChip>
                                    break;
                                case VulnRisk.Info:
                                    <MudChip Color="Color.Info" Icon="@Icons.Material.Filled.Info">@localizer["info"]</MudChip>
                                    break;
                            }
                        
                        </CellTemplate>
                        
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.Status" Title="@localizer["status"]">
                        <CellTemplate>
                            @switch (@context.Item.Status)
                            {
                                case VulnStatus.Accepted:
                                    <MudChip Color="Color.Warning" Icon="@Icons.Material.Filled.CheckCircle">@localizer["accepted"]</MudChip>
                                    break;
                                case VulnStatus.Confirmed:
                                    <MudChip Color="Color.Error" Icon="@Icons.Material.Filled.CheckBox">@localizer["confirmed"]</MudChip>
                                    break;
                                case VulnStatus.Invalid:
                                    <MudChip Color="Color.Primary" Icon="@Icons.Material.Filled.ErrorOutline">@localizer["invalid"]</MudChip>
                                    break;
                                case VulnStatus.Open:
                                    <MudChip Color="Color.Info" Icon="@Icons.Material.Filled.Flag">@localizer["open"]</MudChip>
                                    break;
                                case VulnStatus.OutOfScope:
                                    <MudChip Color="Color.Primary" Icon="@Icons.Material.Filled.ErrorOutline">@localizer["outofScope"]</MudChip>
                                    break;
                                case VulnStatus.Resolved:
                                    <MudChip Color="Color.Success" Icon="@Icons.Material.Filled.Check">@localizer["resolved"]</MudChip>
                                    break;
                            }
                        
                        </CellTemplate>
                        
                    </PropertyColumn>
    
                </Columns>
                <PagerContent>
                    <MudDataGridPager T="Vuln"/>
                </PagerContent>
            </MudDataGrid>
    
        </MudTabPanel>
    </MudTabs>
    <br/>
    <MudButton Href="/"
               Variant="Variant.Filled"
               StartIcon="@Icons.Material.Filled.ArrowBack"
               Color="Color.Default">
        @localizer["back"]
    </MudButton>
</MudItem>
</MudGrid>
</AuthorizeView>
<AuthorizeView Context="innexContext" Roles="Client">
    <MudGrid>
    <MudItem xs="12" sm="12" md="12" Class="mt-5">
        <MudStack Row="true">
        
            <MudItem xs="12" sm="4" md="4">
                <MudText Typo="Typo.h4">
                    <MudText Typo="Typo.h4">
                        <MudText Typo="Typo.h4">
                            <MudIcon Icon="@Icons.Material.Filled.BugReport"/> @localizer["vulns"]
                        </MudText>
                    </MudText>
                </MudText>
        
            </MudItem>
            <MudItem xs="12" sm="8" md="8">
                <div class="d-flex justify-end">
                    <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
                </div>
            </MudItem>
        </MudStack>
        
    </MudItem>
    <MudItem xs="12" sm="12" md="12">
                <MudDataGrid T="Vuln" Items="@model.Where(x => x.Template == false && x.Project?.ClientId == user.ClientId)" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="_quickFilter"
                             Hideable="true" Hover="true" RowClick="@RowClicked" MultiSelection="true" SelectedItemsChanged="@SelectedItemsChanged" Virtualize="true" DragDropColumnReordering="true"> 
                    <ToolBarContent>
                        <MudSpacer/>
                        <MudTextField @bind-Value="searchString" Placeholder="@localizer["search"]" Adornment="Adornment.Start" Immediate="true"
                                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0">
                        </MudTextField>
                    </ToolBarContent>
                    <Columns>
                        <SelectColumn T="Vuln"/>
        
                        <PropertyColumn Property="x => x.Name" Title="@localizer["name"]"/>
                        <PropertyColumn Property="x => x.Language" Title="@localizer["language"]">
                            <CellTemplate>
                                @switch (@context.Item.Language)
                                {
                                    case Language.English:
                                        <CountryFlag Country="Country.US" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
                                        break;
                                    case Language.Español:
                                        <CountryFlag Country="Country.ES" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
        
                                        break;
                                    case Language.Português:
                                        <MudStack Row="true" Spacing="0">
                                            <CountryFlag Country="Country.PT" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
                                            <CountryFlag Country="Country.BR" Size="FlagSize.Normal" IsRounded="true"></CountryFlag>
                                        </MudStack>
                                        break;
                                }
        
                            </CellTemplate>
                        </PropertyColumn>
                        <PropertyColumn Property="x => x.CreatedDate" Title="@localizer["createdDate"]">
                            <CellTemplate>
                                <MudStack Row="true">
                                    <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Size="Size.Small"/>
                                    <MudStack Justify="Justify.Center" Spacing="0">
                                        <MudText Typo="Typo.body1">@context.Item.CreatedDate.ToShortDateString()</MudText>
                                    </MudStack>
                                </MudStack>
        
                            </CellTemplate>
                        </PropertyColumn>
                        <PropertyColumn Property="x => x.ModifiedDate" Title="@localizer["modifiedDate"]">
                            <CellTemplate>
                                <MudStack Row="true">
                                    <MudIcon Icon="@Icons.Material.Filled.EditCalendar" Size="Size.Small"/>
                                    <MudStack Justify="Justify.Center" Spacing="0">
                                        <MudText Typo="Typo.body1">@context.Item.ModifiedDate.ToShortDateString()</MudText>
                                    </MudStack>
                                </MudStack>
        
                            </CellTemplate>
                        </PropertyColumn>
                        <TemplateColumn Property="x => x.Project.Name" Title="@localizer["project"]">
                            <CellTemplate>
                                <MudStack Row="true">
                                    @if (@context.Item.Project == null)
                                    {
                                        <MudIcon Icon="@Icons.Material.Filled.FolderOpen" Size="Size.Small"/>
                                        <MudStack Justify="Justify.Center" Spacing="0">
                                            <MudText Typo="Typo.body1">@localizer["noProject"]</MudText>
                                        </MudStack>
                                            
                                    }
                                    else
                                    {
                                        <MudIcon Icon="@Icons.Material.Filled.Folder" Size="Size.Small"/>
                                        <MudStack Justify="Justify.Center" Spacing="0">
                                            <MudText Typo="Typo.body1">@context.Item.Project.Name</MudText>
                                        </MudStack>
                                            
                                    }
                     
                                </MudStack>
                                    
                            </CellTemplate>
                        </TemplateColumn>
        
                        <PropertyColumn Property="x => x.Risk" Title="@localizer["risk"]">
                            <CellTemplate>
                                @switch (@context.Item.Risk)
                                {
                                    case VulnRisk.Critical:
                                        <MudChip Color="Color.Secondary" Icon="@Icons.Material.Filled.CrisisAlert">@localizer["critical"]</MudChip>
                                        break;
                                    case VulnRisk.High:
                                        <MudChip Color="Color.Error" Icon="@Icons.Material.Filled.Error">@localizer["high"]</MudChip>
                                        break;
                                    case VulnRisk.Medium:
                                        <MudChip Color="Color.Warning" Icon="@Icons.Material.Filled.ErrorOutline">@localizer["medium"]</MudChip>
                                        break;
                                    case VulnRisk.Low:
                                        <MudChip Color="Color.Success" Icon="@Icons.Material.Filled.Flag">@localizer["low"]</MudChip>
                                        break;
                                    case VulnRisk.Info:
                                        <MudChip Color="Color.Info" Icon="@Icons.Material.Filled.Info">@localizer["info"]</MudChip>
                                        break;
                                }
        
                            </CellTemplate>
        
                        </PropertyColumn>
                        <PropertyColumn Property="x => x.Status" Title="@localizer["status"]">
                            <CellTemplate>
                                @switch (@context.Item.Status)
                                {
                                    case VulnStatus.Accepted:
                                        <MudChip Color="Color.Warning" Icon="@Icons.Material.Filled.CheckCircle">@localizer["accepted"]</MudChip>
                                        break;
                                    case VulnStatus.Confirmed:
                                        <MudChip Color="Color.Error" Icon="@Icons.Material.Filled.CheckBox">@localizer["confirmed"]</MudChip>
                                        break;
                                    case VulnStatus.Invalid:
                                        <MudChip Color="Color.Primary" Icon="@Icons.Material.Filled.ErrorOutline">@localizer["invalid"]</MudChip>
                                        break;
                                    case VulnStatus.Open:
                                        <MudChip Color="Color.Info" Icon="@Icons.Material.Filled.Flag">@localizer["open"]</MudChip>
                                        break;
                                    case VulnStatus.OutOfScope:
                                        <MudChip Color="Color.Primary" Icon="@Icons.Material.Filled.ErrorOutline">@localizer["outofScope"]</MudChip>
                                        break;
                                    case VulnStatus.Resolved:
                                        <MudChip Color="Color.Success" Icon="@Icons.Material.Filled.Check">@localizer["resolved"]</MudChip>
                                        break;
                                }
        
                            </CellTemplate>
        
                        </PropertyColumn>
        
                    </Columns>
                    <PagerContent>
                        <MudDataGridPager T="Vuln"/>
                    </PagerContent>
                </MudDataGrid>

            </MudItem>
    </MudGrid>
    
</AuthorizeView>
