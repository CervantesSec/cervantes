@page "/workspace/{project:guid}/tasks"
@using Cervantes.CORE
@using Cervantes.CORE.ViewModels
@using Cervantes.Web.Components.Layout
@using Cervantes.Web.Localization
@using global::AuthPermissions.AspNetCore
@using global::AuthPermissions.BaseCode.PermissionsCode
@using Microsoft.Extensions.Localization
@using MudBlazor.Extensions.Core
@using Color = MudBlazor.Color
@using Size = MudBlazor.Size
@inject IDialogService Dialog
@inject IStringLocalizer<Resource> localizer
@layout WorkspaceLayout
@inject NavigationManager navigationManager
@inject IHttpContextAccessor _accessor
@inject IMudExDialogService DialogEx
@inject AuthenticationStateProvider authenticationStateProvider
@attribute [HasPermission(Permissions.TasksRead)]

<PageTitle>@localizer["tasks"] | Cervantes</PageTitle>
    <SectionContent SectionName="appbar">
        <MudText Typo="Typo.h5">
            <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Workspaces"></MudIcon>

            @localizer["workspace"]

        </MudText>

    </SectionContent>
    <SectionContent SectionName="top-bar">
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="0">
            <MudText Typo="Typo.h5">
                <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Folder"/> @Project.Name
            </MudText>
            <MudDivider Vertical="true" DividerType="DividerType.Middle" FlexItem="true"></MudDivider>
            <MudText Typo="Typo.h5">
                @localizer["tasks"]
            </MudText>
        </MudStack>
    </SectionContent>

    <SectionContent SectionName="breadcrumbs">
        <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
    </SectionContent>
<MudGrid>
<MudItem xs="12" sm="12" md="12">
    <MudTabs Elevation="25" Color="Color.Transparent" Rounded="true" PanelClass="mt-6">
        <MudTabPanel Text="@localizer["list"]" Icon="@Icons.Material.Filled.List">
            <MudDataGrid T="CORE.Entities.Task" Items="@tasks.Where(x => x.Template == false)" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="_quickFilter"
                         Hideable="true" Hover="true" RowClick="@RowClicked" MultiSelection="true" SelectedItemsChanged="@SelectedItemsChanged" Virtualize="true" DragDropColumnReordering="true">
                <ToolBarContent>
                    <MudStack Row="true">
                        @if (userAth.HasPermission(Permissions.TasksAdd))
                        {
                            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="@((e) => OpenDialogCreate(@project, maxWidthEx))">@localizer["create"]</MudButton>
                        }
                        
                        @if (userAth.HasPermission(Permissions.TasksDelete))
                        {
                            @if (seleTasks.Count() != 0)
                            {
                                <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
                                    <MudButton>@localizer["actions"]</MudButton>
                                    <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" Style="align-self: auto;">
                                        <MudMenuItem OnClick="@((e) => BtnActions(0))">@localizer["delete"]</MudMenuItem>
                                    </MudMenu>
                                </MudButtonGroup>
                            }
                        }
                        
                    </MudStack>
                    <MudSpacer/>
                    <MudTextField @bind-Value="searchString" Placeholder="@localizer["search"]" Adornment="Adornment.Start" Immediate="true"
                                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0">
                    </MudTextField>
                </ToolBarContent>
                <Columns>
                    <SelectColumn T="CORE.Entities.Task"/>

                    <PropertyColumn Property="x => x.Name" Title="@localizer["name"]"/>
                    <TemplateColumn Title="@localizer["project"]">
                        <CellTemplate>
                            @if (@context.Item.Project == null)
                            {
                                @localizer["noProject"]
                            }
                            else
                            {
                                @context.Item.Project.Name
                            }
                        </CellTemplate>
                    </TemplateColumn>
                    <TemplateColumn Title="@localizer["assignedTo"]">
                        <CellTemplate>
                            @if (!string.IsNullOrEmpty(@context.Item.AsignedUserId))
                            {
                            <MudStack Row="true">

                                @if (@context.Item.AsignedUser.Avatar != null)
                                {
                                <MudImage Src="@context.Item.AsignedUser.Avatar" Class="rounded-lg" ObjectFit="ObjectFit.ScaleDown" Height="30" Width="30"/>
                                }
                                else
                                {
                                <MudAvatar Color="Color.Primary" Size="Size.Small">@context.Item.AsignedUser.FullName[0]</MudAvatar>
                                }
                                <MudStack Justify="Justify.Center" Spacing="0">
                                    <MudText Typo="Typo.body1">@context.Item.AsignedUser.FullName</MudText>
                                </MudStack>
                            </MudStack>
                            }
                            else
                            {
                            <MudStack Row="true" Justify="Justify.FlexStart">
                                <MudButton Variant="Variant.Outlined" OnClick="@((e) => AssignToMe(@context.Item.Id))">@localizer["assignToMe"]</MudButton>

                            </MudStack>

                            }
                        </CellTemplate>
                    </TemplateColumn>
                    <PropertyColumn Property="x => x.Status" Title="@localizer["status"]">
                        <CellTemplate>
                            @switch (@context.Item.Status)
                            {
                                case CORE.Entities.TaskStatus.Backlog:
                                    <MudChip Icon="@Icons.Material.Filled.List" Color="Color.Info">@localizer["backlog"]</MudChip>
                                    break;
                                case CORE.Entities.TaskStatus.ToDo:
                                    <MudChip Icon="@Icons.Material.Filled.PlaylistAdd" Color="Color.Primary">@localizer["toDo"]</MudChip>
                                    break;
                                case CORE.Entities.TaskStatus.InProgress:
                                    <MudChip Icon="@Icons.Material.Filled.DoubleArrow" Color="Color.Warning">@localizer["inProgress"]</MudChip>
                                    break;
                                case CORE.Entities.TaskStatus.Blocked:
                                    <MudChip Icon="@Icons.Material.Filled.Block" Color="Color.Error">@localizer["blocked"]</MudChip>
                                    break;
                                case CORE.Entities.TaskStatus.Done:
                                    <MudChip Icon="@Icons.Material.Filled.DoneAll" Color="Color.Success">@localizer["done"]</MudChip>
                                    break;
                            }

                        </CellTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.StartDate" Title="@localizer["startDate"]">
                        <CellTemplate>
                            <MudStack Row="true">
                                <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Size="Size.Small"/>
                                <MudStack Justify="Justify.Center" Spacing="0">
                                    <MudText Typo="Typo.body1">@context.Item.StartDate.ToShortDateString()</MudText>
                                </MudStack>
                            </MudStack>

                        </CellTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.EndDate" Title="@localizer["endDate"]">
                        <CellTemplate>
                            <MudStack Row="true">
                                <MudIcon Icon="@Icons.Material.Filled.CalendarMonth" Size="Size.Small"/>
                                <MudStack Justify="Justify.Center" Spacing="0">
                                    <MudText Typo="Typo.body1">@context.Item.EndDate.ToShortDateString()</MudText>
                                </MudStack>
                            </MudStack>

                        </CellTemplate>
                    </PropertyColumn>

                </Columns>
                <PagerContent>
                    <MudDataGridPager T="CORE.Entities.Task"/>
                </PagerContent>
            </MudDataGrid>


        </MudTabPanel>

        <MudTabPanel Text="Kanban" Icon="@Icons.Material.Filled.ViewKanban">
            <MudStack>
                <MudPaper Elevation="25">
                    <MudToolBar>
                        @if (userAth.HasPermission(Permissions.TasksAdd))
                        {
                            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="@((e) => OpenDialogCreate(@project, maxWidthEx))">@localizer["create"]</MudButton>
                        }
                        <MudSpacer/>
                        <MudSpacer/>

                        <MudSelect @bind-Value="selectedUser" For="@(() => selectedUser)" AdornmentIcon="@Icons.Material.Filled.Person" Adornment="Adornment.Start" TransformOrigin="Origin.BottomCenter" AnchorOrigin="Origin.BottomCenter" PopoverClass="fixed">
                            <MudSelectItem Value="string.Empty">@localizer["selectUser"]</MudSelectItem>
                            @foreach (var user in users)
                            {
                                <MudSelectItem Value="@user.Id">@user.FullName</MudSelectItem>
                            }
                        </MudSelect>

                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.FilterAlt" Color="Color.Default" OnClick="@((e) => Filter())">@localizer["filter"]</MudButton>
                        &nbsp; &nbsp;
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.FilterAlt" Color="Color.Secondary" OnClick="@((e) => ClearFilter())">@localizer["clear"]</MudButton>
                    </MudToolBar>
                </MudPaper>
                <MudPaper Elevation="25">

                    <MudDropContainer T="CORE.Entities.Task" Items="tasks.Where(x => x.Template == false)" ItemsSelector="@((item, dropzone) => item.Status.ToString() == dropzone)" ItemDropped="ItemUpdated" Class="d-flex flex-wrap flex-grow-1">
                        <ChildContent>

                            <MudDropZone T="CORE.Entities.Task" Identifier="@CORE.Entities.TaskStatus.Backlog.ToString()" ItemDraggingClass="mud-info-text" Class="rounded-lg mud-alert-text-info pa-6 ma-4 flex-grow-1 mud-elevation-25">
                                <MudText Typo="Typo.h6" Class="mb-4">
                                    <MudIcon Icon="@Icons.Material.Filled.List" Size="Size.Small"/> @localizer["backlog"]
                                </MudText>
                            </MudDropZone>

                            <MudDropZone T="CORE.Entities.Task" Identifier="@CORE.Entities.TaskStatus.ToDo.ToString()" Class="rounded-lg mud-alert-text-primary pa-6 ma-4 flex-grow-1 mud-elevation-25">
                                <MudText Typo="Typo.h6" Class="mb-4">
                                    <MudIcon Icon="@Icons.Material.Filled.PlaylistAdd" Size="Size.Small"/> @localizer["toDo"]
                                </MudText>
                            </MudDropZone>

                            <MudDropZone T="CORE.Entities.Task" Identifier="@CORE.Entities.TaskStatus.InProgress.ToString()" Class="rounded-lg mud-alert-text-warning pa-6 ma-4 flex-grow-1 mud-elevation-25">
                                <MudText Typo="Typo.h6" Class="mb-4">
                                    <MudIcon Icon="@Icons.Material.Filled.DoubleArrow" Size="Size.Small"/> @localizer["inProgress"]
                                </MudText>
                            </MudDropZone>

                            <MudDropZone T="CORE.Entities.Task" Identifier="@CORE.Entities.TaskStatus.Blocked.ToString()" Class="rounded-lg mud-alert-text-error pa-6 ma-4 flex-grow-1 mud-elevation-25">
                                <MudText Typo="Typo.h6" Class="mb-4">
                                    <MudIcon Icon="@Icons.Material.Filled.Block" Size="Size.Small"/> @localizer["blocked"]
                                </MudText>
                            </MudDropZone>

                            <MudDropZone T="CORE.Entities.Task" Identifier="@CORE.Entities.TaskStatus.Done.ToString()" Class="rounded-lg mud-alert-text-success pa-6 ma-4 flex-grow-1 mud-elevation-25">
                                <MudText Typo="Typo.h6" Class="mb-4">
                                    <MudIcon Icon="@Icons.Material.Filled.DoneAll" Size="Size.Small"/> @localizer["done"]
                                </MudText>
                            </MudDropZone>

                        </ChildContent>
                        <ItemRenderer>
                            <MudCard Elevation="25" Class="pa-4 my-4">
                                <MudCardHeader Style="padding: 5px">
                                    <CardHeaderContent>

                                        <MudStack Row="true">
                                            <MudText Typo="Typo.h6">@context.Name</MudText>
                                            <MudSpacer/>
                                            <MudIconButton Icon="@Icons.Material.Filled.Details" Color="Color.Primary" Size="Size.Small" OnClick="@((e) => DetailsDialog(@context, maxWidth))"/>

                                        </MudStack>

                                    </CardHeaderContent>
                                </MudCardHeader>
                                <MudCardContent>
                                    <MudStack>
                                        <MudText Typo="Typo.body2">
                                            @if (@context.Description.Length > 100)
                                            {
                                                @((MarkupString)@context.Description.Substring(0, 100))
                                            }
                                            else
                                            {
                                                @((MarkupString)@context.Description)
                                            }
                                        </MudText>
                                        <MudStack Row="true">
                                            @if (!string.IsNullOrEmpty(@context.AsignedUserId))
                                            {
                                                @if (string.IsNullOrEmpty(@context.AsignedUser.Avatar))
                                                {
                                                    <MudTooltip Text="@context.AsignedUser.FullName">
                                                        <MudAvatar Color="Color.Primary" Size="Size.Small">@context.AsignedUser.FullName[0]</MudAvatar>
                                                    </MudTooltip>
                                                }
                                                else
                                                {
                                                    <MudTooltip Text="@context.AsignedUser.FullName">
                                                        <MudAvatar Size="Size.Small">
                                                            <MudImage Src="@context.AsignedUser.Avatar" ></MudImage>
                                                        </MudAvatar>
                                                    </MudTooltip>
                                                }
                                            }
                                            else
                                            {
                                                <MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="@((e) => AssignToMe(@context.Id))">@localizer["assignToMe"]</MudButton>
                                            }

                                            <MudSpacer/>
                                            @{
                                                var totalDays = (@context.EndDate - DateTime.Today).TotalDays;
                                            }
                                            @if (@Math.Truncate(totalDays) < 0)
                                            {
                                                <MudChip T="string" Size="Size.Small" Icon="@Icons.Material.Filled.AccessTime" Color="Color.Error">@localizer["outOfTime"] @Math.Truncate(totalDays) @localizer["days"]</MudChip>
                                            }
                                            else
                                            {
                                                <MudChip T="string" Size="Size.Small" Icon="@Icons.Material.Filled.AccessTime" Color="Color.Primary">@localizer["daysLeft"] @Math.Truncate(totalDays) @localizer["days"]</MudChip>
                                            }
                                        </MudStack>


                                    </MudStack>

                                </MudCardContent>

                            </MudCard>

                        </ItemRenderer>
                    </MudDropContainer>
                </MudPaper>
            </MudStack>
        </MudTabPanel>

    </MudTabs>
    
</MudItem>
</MudGrid>
