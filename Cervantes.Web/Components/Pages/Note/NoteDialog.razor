@rendermode InteractiveServer
@using Cervantes.CORE
@using Task = System.Threading.Tasks.Task;
@using FluentValidation;
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Localization
@using Variant = MudBlazor.Variant
@using Cervantes.Web.Localization
@using Cervantes.CORE.Entities
@using global::AuthPermissions.AspNetCore
@using global::AuthPermissions.BaseCode.PermissionsCode
@using TaskStatus = Cervantes.CORE.Entities.TaskStatus
@inject IStringLocalizer<Resource> localizer
@inject IDialogService Dialog
@inject AuthenticationStateProvider authenticationStateProvider
@attribute [HasPermission(Permissions.NotesRead)]

<style>
	.tox-tinymce-aux {
        z-index: 999999!important;
    }
</style>

<MudDialog Class="mud-ex-dialog-initial">
	<TitleContent>
		            <MudStack Row="true" Spacing="1">

		<MudText Typo="Typo.h4"><MudIcon Icon="@Icons.Material.Filled.Note"/> @note.Name</MudText>
		@if (user.HasPermission(Permissions.NotesEdit))
		{
			@if (editMode)
			{
				<MudChip T="string" Icon="@Icons.Material.Filled.RemoveRedEye" Color="Color.Default" OnClick="@((e) => EditMode())">@localizer["details"]</MudChip>
			}
			else
			{
				<MudChip T="string" Icon="@Icons.Material.Filled.Edit" Color="Color.Default" OnClick="@((e) => EditMode())">@localizer["edit"]</MudChip>

			}
		}
		
		@if (user.HasPermission(Permissions.NotesDelete))
		{
			<MudChip T="string" Icon="@Icons.Material.Filled.Delete" Color="Color.Default" OnClick="@((e) => DeleteNoteDialog(note, medium))">@localizer["delete"]</MudChip>
		}
		

		            </MudStack>
	</TitleContent>
	<DialogContent>
		@if (editMode)
        	{
			        <MudContainer MaxWidth="MaxWidth.False" Style="max-height: 1000px; overflow-y: scroll;">
				        <MudForm Model="@model" @ref="@form" Validation="@(noteValidator.ValidateValue)" ValidationDelay="0" method="dialog">
                       
					        <MudStack AlignItems="AlignItems.Stretch">
						        <MudTextField @bind-Value="model.Name"
						                      For="@(() => model.Name)"
						                      Immediate="true"
						                      Label="@localizer["name"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Note"/>
						        <TinyMCE.Blazor.Editor ScriptSrc="lib/tinymce/tinymce.min.js" Conf="@editorConf" @bind-Value="model.Description" data-mce-placeholder="Description"/>
					        </MudStack>
				        </MudForm>
				        <MudStack Row="true" Justify="Justify.FlexEnd">
					        <MudButton Variant="Variant.Filled" Color="@Color.Default" OnClick="Cancel">@localizer["cancel"]</MudButton>
					        @if (user.HasPermission(Permissions.NotesEdit))
					        {
					        @if (editMode)
					        {
					        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="@Color.Primary" OnClick="Submit">@localizer["save"]</MudButton>

					        }
					        }
				        </MudStack>
				        
			        </MudContainer>
		        
	        }
		else
		{
			<MudGrid>
				<MudItem xs="12" sm="4" md="3">
					<MudCard Elevation="25">
						<MudCardContent>
							<div class="d-flex justify-center mb-4">
								<MudIcon Color="Color.Default" Icon="@Icons.Material.Filled.Note" Size="Size.Large" />
							</div>
							<MudList T="string" Dense="true">
								<MudListItem T="string" Text="@note.Name" Icon="@Icons.Material.Filled.Note" />
								<MudListItem T="string" Text="@note.CreatedDate.ToShortDateString()" Icon="@Icons.Material.Filled.Person" />
							</MudList>
						</MudCardContent>
					</MudCard>
				</MudItem>
				<MudItem xs="12" sm="8" md="9">
					<MudCard Elevation="25">
						<MudCardHeader>
							<CardHeaderContent>
								<MudText>@localizer["description"]</MudText>
							</CardHeaderContent>
						</MudCardHeader>
						<MudCardContent>
							@((MarkupString)note.Description)
						</MudCardContent>
					</MudCard>
				</MudItem>
			</MudGrid>

		}
		
	</DialogContent>
	<DialogActions>
		
		
	</DialogActions>
</MudDialog>
